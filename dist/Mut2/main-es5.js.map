{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/adminp/adminp.component.ts","webpack:///src/app/components/adminp/adminp.component.html","webpack:///src/app/components/edit-menu/edit-menu.component.ts","webpack:///src/app/components/edit-menu/edit-menu.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/loginadmin/loginadmin.component.ts","webpack:///src/app/components/loginadmin/loginadmin.component.html","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/reservation/reservation.component.ts","webpack:///src/app/components/reservation/reservation.component.html","webpack:///src/app/components/test/test.component.ts","webpack:///src/app/components/test/test.component.html","webpack:///src/app/components/testh/testh.component.ts","webpack:///src/app/components/testh/testh.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/editmenu.service.ts","webpack:///src/app/services/reservation.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","declarations","schemas","providers","bootstrap","AdminpComponent","authService","router","getAdmin","subscribe","profile","user","err","console","log","admin","selectedAdmin","EditMenuComponent","editmenuService","reservationService","flashMessage","ditores","pastas","meats","fishs","desserts","drinks","columns","loadingReservation","event","filterValue","target","value","reservations","filter","trim","toLowerCase","resetForm","refreshDitoreList","resetFormP","refreshPastaList","resetFormF","refreshFishList","resetFormM","refreshMeatList","resetFormDr","refreshDrinkList","resetFormD","refreshDessertList","resetFormR","refreshReservationList","form","reset","selectedReservation","_id","name","date","time","specification","number","persons","postReservation","res","Date","toDateString","success","getReservation","allmenu","sort","paginator","reservation","confirm","deleteReservation","M","toast","html","classes","setTimeout","selectedDitore","food","description","postDitore","putDitore","getDitore","dite","deleteDitore","selectedPasta","pasta","descriptionp","postPasta","putPasta","getPasta","deletePasta","selectedFish","fish","descriptionf","postFish","putFish","getFish","deleteFish","selectedMeat","meat","descriptionm","postMeat","putMeat","getMeat","deleteMeat","selectedDessert","dessert","descriptiond","postDessert","putDessert","getDessert","deleteDessert","selectedDrink","drink","descriptiondr","postDrink","putDrink","getDrink","deleteDrink","logout","show","cssClass","timeout","navigate","applyFilter","onSubmitR","HomeComponent","menus","map","string","images","images1","images2","images3","p","String","transform","encapsulation","None","animations","LoginadminComponent","username","password","authenticateAdmin","data","storeAdminData","token","msg","onLoginSubmit","MenuComponent","image","n","imagesP","imagesD","imagesDr","imagesF","ditore","slides","arr","chunkSize","i","len","length","push","slice","allpastas","allmeat","allfish","alldessert","alldrinks","NavbarComponent","collapse","faTwitter","faFacebook","faInstagram","ReservationComponent","validateService","resetFormRe","validateReservation","onRegisterSubmit","ELEMENT_DATA","position","weight","symbol","TestComponent","displayedColumns","dataSource","TesthComponent","buttonName","reviews","review","button","resetFormRev","refreshReviewsList","selectedReview","rev","postReview","getReview","toggle","toggleR","AuthGuard","loggedIn","AuthService","http","baseURL","headers","append","post","pipe","response","json","localStorage","setItem","JSON","stringify","authToken","getItem","clear","loadToken","get","put","providedIn","EditMenuService","baseURL1","baseURL2","baseURL3","baseURL4","baseURL5","options","ReservationService","ValidateService","Ditore","undefined","Pasta","Meat","Fish","Dessert","Drink","Reservation","environment","production","bootstrapModule","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,QAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,gC;AAAA;AAAA;ACPzB;;AACA;;AACI;;AAEF;;AACF;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzxB;AACA;AAACC,UAAI,EAAC,MAAN;AAAcC,eAAS,EAAE;AAAzB,KAFwB,EAGzB;AAACD,UAAI,EAAC,OAAN;AAAeC,eAAS,EAAE;AAA1B,KAHyB,EAIzB;AAACD,UAAI,EAAC,OAAN;AAAeC,eAAS,EAAE;AAA1B,KAJyB,EAKzB;AAACD,UAAI,EAAC,QAAN;AAAgBC,eAAS,EAAE;AAA3B,KALyB,EAMzB;AAACD,UAAI,EAAC,aAAN;AAAqBC,eAAS,EAAE;AAAhC,KANyB,EAOzB;AAACD,UAAI,EAAC,MAAN;AAAcC,eAAS,EAAE;AAAzB,KAPyB,EAQzB;AAACD,UAAI,EAAC,OAAN;AAAeC,eAAS,EAAE;AAA1B,KARyB,EASxB;AAACD,UAAI,EAAC,EAAN;AAAUC,eAAS,EAAE;AAArB,KATwB,CAA1B;;QAkEaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,2EAAD,EAAkB,2EAAlB,EAAmC,6DAAnC,C;AAA6C,gBA9B/C,CACN,0DADM,EAEN,wDAFM,EAGN,qEAHM,EAIN,mFAJM,EAKN,6FALM,EAMN,kEANM,EAON,qEAPM,EAQN,4EAAoBV,OAApB,EARM,EASN,6DAAaA,OAAb,CAAqBO,SAArB,CATM,EAUN,yEAAmBP,OAAnB,EAVM,EAWN,uEAXM,EAYN,4FAZM,EAaN,gFAbM,EAcN,uEAdM,EAeN,yEAfM,EAgBN,iFAhBM,EAiBN,2EAjBM,EAkBN,2EAlBM,EAmBN,yEAnBM,EAoBN,+EApBM,EAqBP,uEArBO,EAsBP,oEAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,CA0BP;AA1BO,OA8B+C;;;;0HAG7CU,S,EAAS;AAAA,uBA7ClB,2DA6CkB,EA5ClB,6EA4CkB,EA3ClB,8EA2CkB,EA1ClB,oFA0CkB,EAzClB,4FAyCkB,EAxClB,gGAwCkB,EAvClB,oFAuCkB,EAtClB,mGAsCkB,EArClB,8EAqCkB,EApClB,iFAoCkB;AApCJ,kBAIb,0DAJa,EAKb,wDALa,EAMb,qEANa,EAOb,mFAPa,EAQb,6FARa,EASb,kEATa,EAUb,qEAVa,EAUG,2EAVH,EAUG,4DAVH,EAUG,mEAVH,EAcb,uEAda,EAeb,4FAfa,EAgBb,gFAhBa,EAiBb,uEAjBa,EAkBb,yEAlBa,EAmBb,iFAnBa,EAoBb,2EApBa,EAqBb,2EArBa,EAsBb,yEAtBa,EAuBb,+EAvBa,EAwBd,uEAxBc,EAyBd,oEAzBc,EA0Bd,qEA1Bc,EA2Bd,8EA3Bc,CA6Bd;AA7Bc;AAoCI,O;;;;;;sEAATA,S,EAAS;cA/CrB,sDA+CqB;eA/CZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,6EAFY,EAGZ,8EAHY,EAIZ,oFAJY,EAKZ,4FALY,EAMZ,gGANY,EAOZ,oFAPY,EAQZ,mGARY,EASZ,8EATY,EAUZ,iFAVY,CADN;AAcRV,iBAAO,EAAE,CACN,0DADM,EAEN,wDAFM,EAGN,qEAHM,EAIN,mFAJM,EAKN,6FALM,EAMN,kEANM,EAON,qEAPM,EAQN,4EAAoBD,OAApB,EARM,EASN,6DAAaA,OAAb,CAAqBO,SAArB,CATM,EAUN,yEAAmBP,OAAnB,EAVM,EAWN,uEAXM,EAYN,4FAZM,EAaN,gFAbM,EAcN,uEAdM,EAeN,yEAfM,EAgBN,iFAhBM,EAiBN,2EAjBM,EAkBN,2EAlBM,EAmBN,yEAnBM,EAoBN,+EApBM,EAqBP,uEArBO,EAsBP,oEAtBO,EAuBP,qEAvBO,EAwBP,8EAxBO,CA0BP;AA1BO,WAdD;AA0CRY,iBAAO,EAAE,CAAC,8DAAD,CA1CD;AA4CRC,mBAAS,EAAE,CAAC,2EAAD,EAAkB,2EAAlB,EAAmC,6DAAnC,CA5CH;AA6CRC,mBAAS,EAAE,CAAC,2DAAD;AA7CH,S;AA+CY,Q;;;;;;;;;;;;;;;;;;ACzHtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQA;;AAEI;;AAAI;;AAAsD;;AAAkB;;AAC1E;;AAAsB;;AACnB;;AAAiB;;AACjB;;AAAQ;;AAAI;;AAEnB;;;;;;AAL4D;;AAAA;;AAErD;;AAAA;;;;QDFIC,e;AAGX,+BAAoBC,WAApB,EAAqDC,MAArD,EAAoE;AAAA;;AAAhD,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;mCAE/D;AAAA;;AACN,eAAKD,WAAL,CAAiBE,QAAjB,GAA4BC,SAA5B,CAAsC,UAAAC,OAAO,EAAI;AAC/C,iBAAI,CAACC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACD,WAFD,EAGC,UAAAC,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOD;;;+BAEMG,K,EAAc;AACnB,eAAKT,WAAL,CAAiBU,aAAjB,GAAiCD,KAAjC;AACD;;;;;;;uBAjBUV,e,EAAe,mI,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,iY;AAAA;AAAA;ACV5B;;AACE;;AACE;;AACF;;AACA;;AACF;;AACA;;AAEA;;AAQA;;;;AARK;;AAAA;;;;;;;;;sEDEQA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTX,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCI;;AACQ;;AAAG;;AAAK;;AACf;;;;;;;;AA6Ca;;AACI;;AACI;;AAAK;;AAAa;;AACtB;;AACI;;AAAG;;AAAoB;;AACvB;;AAAK;;AACL;;AACF;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAI;;AAC9E;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwC;;AAAM;;AACrG;;AACF;;AACJ;;AACJ;;;;;;AAZa;;AAAA;;AAEF;;AAAA;;;;;;;;AA9C7B;;AACA;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAA2B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzB;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA6D;AAAA;;AAAA;;AAAA;AAAA;;AAA7D;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAgC;;AAAK;;AACxF;;AAAkF;;AAAM;;AAC1F;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAW;;AACjB;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAxD6D;;AAAA;;AAGI;;AAAA;;AAQc;;AAAA;;AAOV;;AAAA;;AAezB;;AAAA;;;;;;;;AAsEtB;;AACI;;AACI;;AAAK;;AAAe;;AACxB;;AACI;;AAAG;;AAAsB;;AACzB;;AAAK;;AACX;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAI;;AAChF;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAM;;AACtG;;AACF;;AACJ;;AACJ;;;;;;AAZa;;AAAA;;AAEF;;AAAA;;;;;;;;AA9CjC;;AACI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAAgD;AAAA;;AAAA;;AAAA;AAAA;;AAAhD;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA8D;AAAA;;AAAA;;AAAA;AAAA;;AAA9D;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAK;;AACvF;;AAAiF;;AAAM;;AACzF;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAK;;AACX;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAxD6D;;AAAA;;AAGK;;AAAA;;AAQc;;AAAA;;AAOX;;AAAA;;AAezB;;AAAA;;;;;;;;AAqEtB;;AACI;;AACI;;AAA0B;;AAAa;;AAC3C;;AACI;;AAAyB;;AAAqB;;AAC9C;;AAAK;;AACX;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAC/E;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAM;;AACpG;;AACF;;AACJ;;AACJ;;;;;;AAZkC;;AAAA;;AAED;;AAAA;;;;;;;;AA9CvD;;AACI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvB;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAA/D;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAK;;AACtF;;AAAgF;;AAAM;;AACxF;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAI;;AACV;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAxD6D;;AAAA;;AAGI;;AAAA;;AAQgB;;AAAA;;AAOZ;;AAAA;;AAe/C;;AAAA;;;;;;;;AAqEA;;AACI;;AACI;;AAAI;;AAAa;;AACrB;;AACI;;AAAG;;AAAqB;;AACxB;;AAAK;;AACX;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAI;;AAC/E;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAM;;AACpG;;AACF;;AACJ;;AACJ;;;;;;AAZY;;AAAA;;AAED;;AAAA;;;;;;;;AA9CjC;;AACI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAAyB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvB;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAA/D;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAK;;AACtF;;AAAgF;;AAAM;;AACxF;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAI;;AACV;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAxD6D;;AAAA;;AAGI;;AAAA;;AAQgB;;AAAA;;AAOZ;;AAAA;;AAezB;;AAAA;;;;;;;;AAuEtB;;AACI;;AACI;;AAAI;;AAAe;;AACvB;;AACI;;AAAG;;AAAuB;;AAC1B;;AAAK;;AACX;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAI;;AACjF;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AAAM;;AACvG;;AACF;;AACJ;;AACJ;;;;;;AAZY;;AAAA;;AAED;;AAAA;;;;;;;;AA/CjC;;AACI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAAiD;AAAA;;AAAA;;AAAA;AAAA;;AAAjD;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAiE;AAAA;;AAAA;;AAAA;AAAA;;AAAjE;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA+B;;AAAK;;AACvF;;AAAiF;;AAAM;;AACzF;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAK;;AACT;;AACF;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAzD6D;;AAAA;;AAGM;;AAAA;;AAQgB;;AAAA;;AAOd;;AAAA;;AAgBzB;;AAAA;;;;;;;;AAsEtB;;AACI;;AACI;;AAAI;;AAAmB;;AAC3B;;AACI;;AAAG;;AAAwB;;AAC3B;;AAAK;;AACX;;AACI;;AACI;;AACI;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA2B;;AAAI;;AAClF;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA6C;;AAAM;;AAC1G;;AACF;;AACJ;;AACJ;;;;;;AAZY;;AAAA;;AAED;;AAAA;;;;;;;;AA9CjC;;AACI;;AACE;;AACE;;AACE;;AACE;;AAEE;;AACE;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1B;;AAA+C;AAAA;;AAAA;;AAAA;AAAA;;AAA/C;;AACA;;AACE;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AAArD;;AACA;;AAAO;;AACL;;AAAwB;;AAAC;;AAC3B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAA+D;AAAA;;AAAA;;AAAA;AAAA;;AAA/D;;AACA;;AAAO;;AAAU;;AACnB;;AACF;;AACA;;AACE;;AACE;;AAAmD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;AAAK;;AACzF;;AAAmF;;AAAM;;AAC3F;;AACF;;AACF;;AACF;;AAIA;;AACI;;AACI;;AACE;;AACE;;AAAI;;AAAO;;AACb;;AACF;;AACA;;AAeF;;AACN;;AAEF;;AACF;;AACF;;AACF;;AACF;;AACA;;;;;;;;AAxD6D;;AAAA;;AAGU;;AAAA;;AAQU;;AAAA;;AAOZ;;AAAA;;AAeQ;;AAAA;;;;;;AAmC3F;;AAAwD;;AAAiB;;;;;;AACzE;;AAA4C;;;;AAA0C;;;;;;AAA1C;;AAAA;;;;;;AAG5C;;AAAuD;;AAAK;;;;;;AAC5D;;AAA6C;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAI3C;;AAAwD;;AAAK;;;;;;AAC7D;;AAA4C;;AAAuB;;;;;;AAAvB;;AAAA;;;;;;AAG1C;;AAAuD;;AAAQ;;;;;;AAC/D;;AAA4C;;AAA0B;;;;;;AAA1B;;AAAA;;;;;;AAG1C;;AAAuD;;AAAO;;;;;;AAC9D;;AAA4C;;AAAyB;;;;;;AAAzB;;AAAA;;;;;;AAG1C;;AAAuD;;AAAc;;;;;;AACrE;;AAA4C;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAGpD;;AAAuC;;AAAO;;;;;;;;AAC9C;;AAAsD;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqF;;AAAM;;AAAS;;;;;;AAIpK;;;;;;AACF;;;;;;;;;;;;;;;;QD1cWqB,iB;AA4BX,iCAAmBC,eAAnB,EACUZ,WADV,EAESa,kBAFT,EAGUZ,MAHV,EAIUa,YAJV,EAI2C;AAAA;;AAJxB,aAAAF,eAAA,GAAAA,eAAA;AACT,aAAAZ,WAAA,GAAAA,WAAA;AACD,aAAAa,kBAAA,GAAAA,kBAAA;AACC,aAAAZ,MAAA,GAAAA,MAAA;AACA,aAAAa,YAAA,GAAAA,YAAA;AAlBV,aAAAC,OAAA,GAAe,EAAf;AACA,aAAAC,MAAA,GAAc,EAAd;AAEA,aAAAC,KAAA,GAAa,EAAb;AACA,aAAAC,KAAA,GAAa,EAAb;AACA,aAAAC,QAAA,GAAgB,EAAhB;AACA,aAAAC,MAAA,GAAc,EAAd;AACO,aAAAC,OAAA,GAAU,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,QAAzB,EAAmC,SAAnC,EAA8C,eAA9C,EAA+D,QAA/D,CAAV;AACP,aAAAC,kBAAA,GAAqB,KAArB;AAWK;;;;oCAzBOC,K,EAAc;AACxB,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,eAAKC,YAAL,CAAkBC,MAAlB,GAA2BJ,WAAW,CAACK,IAAZ,GAAmBC,WAAnB,EAA3B;AACD;;;mCAyBU;AACT,eAAKC,SAAL;AACA,eAAKC,iBAAL;AACA,eAAKC,UAAL;AACA,eAAKC,gBAAL;AACA,eAAKC,UAAL;AACA,eAAKC,eAAL;AACA,eAAKC,UAAL;AACA,eAAKC,eAAL;AACA,eAAKC,WAAL;AACA,eAAKC,gBAAL;AACA,eAAKC,UAAL;AACA,eAAKC,kBAAL;AACA,eAAKC,UAAL;AACA,eAAKC,sBAAL,GAdS,CAgBb;AACA;AACA;AACA;AAEC,S,CAED;;;;mCACWC,I,EAAe;AACxB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKjC,kBAAL,CAAwBkC,mBAAxB,GAA8C;AAC5CC,eAAG,EAAE,EADuC;AAE5CC,gBAAI,EAAE,EAFsC;AAG5CC,gBAAI,EAAE,EAHsC;AAI5CC,gBAAI,EAAE,EAJsC;AAK5CC,yBAAa,EAAE,EAL6B;AAM5CC,kBAAM,EAAE,EANoC;AAO5CC,mBAAO,EAAE;AAPmC,WAA9C;AASD;;;kCAEST,I,EAAc;AAAA;;AAEpB,eAAKhC,kBAAL,CAAwB0C,eAAxB,CAAwCV,IAAI,CAACnB,KAA7C,EAAoDvB,SAApD,CAA8D,UAACqD,GAAD,EAAS;AACrE,gBAAMN,IAAI,GAAG,IAAIO,IAAJ,CAASD,GAAG,CAACN,IAAb,EAAmBQ,YAAnB,EAAb;;AACA,kBAAI,CAACf,UAAL,CAAgBE,IAAhB;;AAEA,gBAAGW,GAAG,CAACG,OAAP,EAAe;AACb,oBAAI,CAACf,sBAAL;AAGD;AACF,WATD;AAaH;;;iDAEwB;AAAA;;AACzB,eAAK/B,kBAAL,CAAwB+C,cAAxB,GACCzD,SADD,CACW,UAAA0D,OAAO,EAAG;AACnB,kBAAI,CAAClC,YAAL,GAAoBkC,OAApB;AACA,kBAAI,CAAClC,YAAL,GAAoB,IAAI,0EAAJ,CAAuBkC,OAAvB,CAApB;AACA,kBAAI,CAAClC,YAAL,CAAkBmC,IAAlB,GAAyB,MAAI,CAACA,IAA9B;AACA,kBAAI,CAACnC,YAAL,CAAkBoC,SAAlB,GAA8B,MAAI,CAACA,SAAnC;AAID,WATD,EAWC,UAAAzD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WAdF;AAeC;;;gCAEO0D,W,EAA0B;AAChC,eAAKnD,kBAAL,CAAwBkC,mBAAxB,GAA8CiB,WAA9C;AACD;;;kCAEShB,G,EAAaH,I,EAAc;AAAA;;AACnC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKpD,kBAAL,CAAwBqD,iBAAxB,CAA0ClB,GAA1C,EAA+C7C,SAA/C,CAAyD,UAACqD,GAAD,EAAS;AAChE,oBAAI,CAACb,UAAL,CAAgBE,IAAhB;;AACJ,oBAAI,CAACD,sBAAL;;AAEIuB,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;4CAGmB;AAAA;;AAClB,eAAKhD,kBAAL,GAA0B,IAA1B;AACA,eAAKsB,sBAAL;AACA2B,oBAAU,CAAC,YAAM;AACf,kBAAI,CAACjD,kBAAL,GAA0B,KAA1B;AACD,WAFS,EAEP,IAFO,CAAV;AAGD,S,CAEC;;;;kCAEUuB,I,EAAe;AACvB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqB4D,cAArB,GAAsC;AACpCxB,eAAG,EAAE,EAD+B;AAEpCyB,gBAAI,EAAE,EAF8B;AAGpCC,uBAAW,EAAE;AAHuB,WAAtC;AAKD;;;iCACQ7B,I,EAAc;AAAA;;AACrB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqB+D,UAArB,CAAgC9B,IAAI,CAACnB,KAArC,EAA4CvB,SAA5C,CAAsD,UAACqD,GAAD,EAAS;AAC7D,oBAAI,CAACzB,SAAL,CAAec,IAAf;;AACA,oBAAI,CAACb,iBAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAKpB,eAAL,CAAqBgE,SAArB,CAA+B/B,IAAI,CAACnB,KAApC,EAA2CvB,SAA3C,CAAqD,UAACqD,GAAD,EAAS;AAC5D,oBAAI,CAACzB,SAAL,CAAec,IAAf;;AACA,oBAAI,CAACb,iBAAL;;AAEAmC,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;4CAEmB;AAAA;;AACpB,eAAK1D,eAAL,CAAqBiE,SAArB,GAAiC1E,SAAjC,CAA2C,UAAA0D,OAAO,EAAG;AACnD,kBAAI,CAAC9C,OAAL,GAAe8C,OAAf;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;+BAEMwE,I,EAAc;AACnB,eAAKlE,eAAL,CAAqB4D,cAArB,GAAsCM,IAAtC;AACD;;;iCAEQ9B,G,EAAaH,I,EAAc;AAAA;;AAClC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqBmE,YAArB,CAAkC/B,GAAlC,EAAuC7C,SAAvC,CAAiD,UAACqD,GAAD,EAAS;AACxD,oBAAI,CAACzB,SAAL,CAAec,IAAf;;AACJ,oBAAI,CAACb,iBAAL;;AAEImC,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF,S,CACH;AAGA;;;;mCACWzB,I,EAAe;AACxB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqBoE,aAArB,GAAqC;AACnChC,eAAG,EAAE,EAD8B;AAEnCiC,iBAAK,EAAE,EAF4B;AAGnCC,wBAAY,EAAE;AAHqB,WAArC;AAKD;;;kCAESrC,I,EAAc;AAAA;;AACtB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqBuE,SAArB,CAA+BtC,IAAI,CAACnB,KAApC,EAA2CvB,SAA3C,CAAqD,UAACqD,GAAD,EAAS;AAC5D,oBAAI,CAACvB,UAAL,CAAgBY,IAAhB;;AACA,oBAAI,CAACX,gBAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAKtB,eAAL,CAAqBwE,QAArB,CAA8BvC,IAAI,CAACnB,KAAnC,EAA0CvB,SAA1C,CAAoD,UAACqD,GAAD,EAAS;AAC3D,oBAAI,CAACvB,UAAL,CAAgBY,IAAhB;;AACA,oBAAI,CAACX,gBAAL;;AAEAiC,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;2CAEkB;AAAA;;AACnB,eAAK1D,eAAL,CAAqByE,QAArB,GAAgClF,SAAhC,CAA0C,UAAA0D,OAAO,EAAG;AAClD,mBAAI,CAAC7C,MAAL,GAAc6C,OAAd;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;gCAEO2E,K,EAAc;AACpB,eAAKrE,eAAL,CAAqBoE,aAArB,GAAqCC,KAArC;AACD;;;kCAESjC,G,EAAaH,I,EAAc;AAAA;;AACnC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqB0E,WAArB,CAAiCtC,GAAjC,EAAsC7C,SAAtC,CAAgD,UAACqD,GAAD,EAAS;AACvD,qBAAI,CAACvB,UAAL,CAAgBY,IAAhB;;AACJ,qBAAI,CAACX,gBAAL;;AAEIiC,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF,S,CACD;AAIA;;;;mCACWzB,I,EAAe;AACxB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqB2E,YAArB,GAAoC;AAClCvC,eAAG,EAAE,EAD6B;AAElCwC,gBAAI,EAAE,EAF4B;AAGlCC,wBAAY,EAAE;AAHoB,WAApC;AAKD;;;kCAES5C,I,EAAc;AAAA;;AACtB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqB8E,QAArB,CAA8B7C,IAAI,CAACnB,KAAnC,EAA0CvB,SAA1C,CAAoD,UAACqD,GAAD,EAAS;AAC3D,qBAAI,CAACrB,UAAL,CAAgBU,IAAhB;;AACA,qBAAI,CAACT,eAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAKxB,eAAL,CAAqB+E,OAArB,CAA6B9C,IAAI,CAACnB,KAAlC,EAAyCvB,SAAzC,CAAmD,UAACqD,GAAD,EAAS;AAC1D,qBAAI,CAACrB,UAAL,CAAgBU,IAAhB;;AACA,qBAAI,CAACT,eAAL;;AAEA+B,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;0CAEiB;AAAA;;AAClB,eAAK1D,eAAL,CAAqBgF,OAArB,GAA+BzF,SAA/B,CAAyC,UAAA0D,OAAO,EAAG;AACjD,mBAAI,CAAC3C,KAAL,GAAa2C,OAAb;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;gCAEOkF,I,EAAY;AAClB,eAAK5E,eAAL,CAAqB2E,YAArB,GAAoCC,IAApC;AACD;;;kCAESxC,G,EAAaH,I,EAAc;AAAA;;AACnC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqBiF,UAArB,CAAgC7C,GAAhC,EAAqC7C,SAArC,CAA+C,UAACqD,GAAD,EAAS;AACtD,qBAAI,CAACrB,UAAL,CAAgBU,IAAhB;;AACJ,qBAAI,CAACT,eAAL;;AAEI+B,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF,S,CACD;AAIA;;;;mCACWzB,I,EAAe;AACxB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqBkF,YAArB,GAAoC;AAClC9C,eAAG,EAAE,EAD6B;AAElC+C,gBAAI,EAAE,EAF4B;AAGlCC,wBAAY,EAAE;AAHoB,WAApC;AAKD;;;kCAESnD,I,EAAc;AAAA;;AACtB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqBqF,QAArB,CAA8BpD,IAAI,CAACnB,KAAnC,EAA0CvB,SAA1C,CAAoD,UAACqD,GAAD,EAAS;AAC3D,qBAAI,CAACnB,UAAL,CAAgBQ,IAAhB;;AACA,qBAAI,CAACP,eAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAK1B,eAAL,CAAqBsF,OAArB,CAA6BrD,IAAI,CAACnB,KAAlC,EAAyCvB,SAAzC,CAAmD,UAACqD,GAAD,EAAS;AAC1D,qBAAI,CAACnB,UAAL,CAAgBQ,IAAhB;;AACA,qBAAI,CAACP,eAAL;;AAEA6B,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;0CAEiB;AAAA;;AAClB,eAAK1D,eAAL,CAAqBuF,OAArB,GAA+BhG,SAA/B,CAAyC,UAAA0D,OAAO,EAAG;AACjD,mBAAI,CAAC5C,KAAL,GAAa4C,OAAb;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;gCAEOyF,I,EAAY;AAClB,eAAKnF,eAAL,CAAqBkF,YAArB,GAAoCC,IAApC;AACD;;;kCAES/C,G,EAAaH,I,EAAc;AAAA;;AACnC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqBwF,UAArB,CAAgCpD,GAAhC,EAAqC7C,SAArC,CAA+C,UAACqD,GAAD,EAAS;AACtD,qBAAI,CAACnB,UAAL,CAAgBQ,IAAhB;;AACJ,qBAAI,CAACP,eAAL;;AAEI6B,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF,S,CACD;AAIA;;;;mCACWzB,I,EAAe;AACxB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqByF,eAArB,GAAuC;AACrCrD,eAAG,EAAE,EADgC;AAErCsD,mBAAO,EAAE,EAF4B;AAGrCC,wBAAY,EAAE;AAHuB,WAAvC;AAKD;;;kCAES1D,I,EAAc;AAAA;;AACtB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqB4F,WAArB,CAAiC3D,IAAI,CAACnB,KAAtC,EAA6CvB,SAA7C,CAAuD,UAACqD,GAAD,EAAS;AAC9D,qBAAI,CAACf,UAAL,CAAgBI,IAAhB;;AACA,qBAAI,CAACH,kBAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAK9B,eAAL,CAAqB6F,UAArB,CAAgC5D,IAAI,CAACnB,KAArC,EAA4CvB,SAA5C,CAAsD,UAACqD,GAAD,EAAS;AAC7D,qBAAI,CAACf,UAAL,CAAgBI,IAAhB;;AACA,qBAAI,CAACH,kBAAL;;AAEAyB,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;6CAEoB;AAAA;;AACrB,eAAK1D,eAAL,CAAqB8F,UAArB,GAAkCvG,SAAlC,CAA4C,UAAA0D,OAAO,EAAG;AACpD,mBAAI,CAAC1C,QAAL,GAAgB0C,OAAhB;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;gCAEOgG,O,EAAkB;AACxB,eAAK1F,eAAL,CAAqByF,eAArB,GAAuCC,OAAvC;AACD;;;kCAEStD,G,EAAaH,I,EAAc;AAAA;;AACnC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqB+F,aAArB,CAAmC3D,GAAnC,EAAwC7C,SAAxC,CAAkD,UAACqD,GAAD,EAAS;AACzD,qBAAI,CAACf,UAAL,CAAgBI,IAAhB;;AACJ,qBAAI,CAACH,kBAAL;;AAEIyB,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF,S,CACD;AAIA;;;;oCACYzB,I,EAAe;AACzB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKlC,eAAL,CAAqBgG,aAArB,GAAqC;AACnC5D,eAAG,EAAE,EAD8B;AAEnC6D,iBAAK,EAAE,EAF4B;AAGnCC,yBAAa,EAAE;AAHoB,WAArC;AAKD;;;mCAEUjE,I,EAAc;AAAA;;AACvB,cAAIA,IAAI,CAACnB,KAAL,CAAWsB,GAAX,IAAkB,EAAtB,EAA0B;AACxB,iBAAKpC,eAAL,CAAqBmG,SAArB,CAA+BlE,IAAI,CAACnB,KAApC,EAA2CvB,SAA3C,CAAqD,UAACqD,GAAD,EAAS;AAC5D,qBAAI,CAACjB,WAAL,CAAiBM,IAAjB;;AACA,qBAAI,CAACL,gBAAL;AAED,aAJD;AAKD,WAND,MAOK;AACH,iBAAK5B,eAAL,CAAqBoG,QAArB,CAA8BnE,IAAI,CAACnB,KAAnC,EAA0CvB,SAA1C,CAAoD,UAACqD,GAAD,EAAS;AAC3D,qBAAI,CAACjB,WAAL,CAAiBM,IAAjB;;AACA,qBAAI,CAACL,gBAAL;;AAEA2B,eAAC,CAACC,KAAF,CAAQ;AAAEC,oBAAI,EAAE,sBAAR;AAAgCC,uBAAO,EAAE;AAAzC,eAAR;AACD,aALD;AAMD;AACF;;;2CAEkB;AAAA;;AACnB,eAAK1D,eAAL,CAAqBqG,QAArB,GAAgC9G,SAAhC,CAA0C,UAAA0D,OAAO,EAAG;AAClD,mBAAI,CAACzC,MAAL,GAAcyC,OAAd;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF;AAOC;;;iCAEQuG,K,EAAc;AACrB,eAAKjG,eAAL,CAAqBgG,aAArB,GAAqCC,KAArC;AACD;;;mCAEU7D,G,EAAaH,I,EAAc;AAAA;;AACpC,cAAIoB,OAAO,CAAC,sCAAD,CAAP,IAAmD,IAAvD,EAA6D;AAC3D,iBAAKrD,eAAL,CAAqBsG,WAArB,CAAiClE,GAAjC,EAAsC7C,SAAtC,CAAgD,UAACqD,GAAD,EAAS;AACvD,qBAAI,CAACjB,WAAL,CAAiBM,IAAjB;;AACJ,qBAAI,CAACL,gBAAL;AAEG,aAJD;AAKD;AACF,S,CACD;;;;wCAGgB;AACd,eAAKxC,WAAL,CAAiBmH,MAAjB;AACA,eAAKrG,YAAL,CAAkBsG,IAAlB,CAAuB,oBAAvB,EAA6C;AAC3CC,oBAAQ,EAAE,eADiC;AAChBC,mBAAO,EAAE;AADO,WAA7C;AAGA,eAAKrH,MAAL,CAAYsH,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,iBAAO,KAAP;AACD;;;;;;;uBA/dY5G,iB,EAAiB,2I,EAAA,mI,EAAA,iJ,EAAA,uH,EAAA,6I;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;0EA0BjB,8D,EAAS,I;;oEACT,wE,EAAY,I;;;;;;;;;;kFA9BZ,CAAC,0EAAD,C;AAAiB,gB;AAAA,c;AAAA,27J;AAAA;AAAA;;;AChC9B;;AACI;;AACQ;;AACJ;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,OAA3B;AAAkC,WAAlC;;AAAoC;;AAAM;;AACjD;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,MAA3B;AAAiC,WAAjC;;AAAmC;;AAAI;;AAC9C;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,MAA3B;AAAiC,WAAjC;;AAAmC;;AAAI;;AAC9C;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,SAA3B;AAAoC,WAApC;;AAAsC;;AAAO;;AACpD;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,OAA3B;AAAkC,WAAlC;;AAAoC;;AAAK;;AAChD;;AACA;;AACQ;;AAAG;AAAA;;AAAA;;AAAA,gCAA2B,QAA3B;AAAmC,WAAnC;;AAAqC;;AAAK;;AACnD;;AAEN;;AACA;;AAAkC;;AAAM;;AACxC;;AAAmC;;AAAa;;AACpD;;AAKA;;AACI;;AAKJ;;AAsEA;;AAqEI;;AAqEI;;AAsEI;;AAuEI;;AAsEhB;;AACI;;AACI;;AAAyE;;AAAM;;AAC/E;;AAA8E;AAAA,mBAAS,IAAA6G,WAAA,QAAT;AAA4B,WAA5B;;AAA9E;;AACF;;AACJ;;AACE;;AACE;;AACA;;AACF;;AACA;;AACE;;AACA;;AACF;;AAEA;;AACI;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACA;;AACI;;AACA;;AACF;;AACR;;AACE;;AACA;;AAEF;;AAEA;;AACF;;AACA;;AACA;;AAGF;;AAEA;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAGV;;AACI;;AAAgC;AAAA;;AAAA;;AAAA,mBAAY,IAAAC,SAAA,MAAZ;AAAsC,WAAtC;;AAC5B;;AAA+C;AAAA;AAAA;;AAA/C;;AACE;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AACA;;AACF;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACN;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACQ;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACM;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACV;;AAAsI;;AAAgB;;AAC5I;;AACI;;AACE;;AAAmD;AAAA;;AAAA;;AAAA,mBAAS,IAAA9E,UAAA,MAAT;AAAoC,WAApC;;AAAsC;;AAAK;;AAChG;;AACF;;AACF;;AACF;;AAEA;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AA3f1B;;;;;;;;;;AAPY;;AAAA;;AACA;;AAAA;;AAMuB;;AAAA;;AAMT;;AAAA;;AAsEA;;AAAA;;AAqEI;;AAAA;;AAqEI;;AAAA;;AAsEI;;AAAA;;AAuEI;;AAAA;;AA2EvB;;AAAA;;AAgCI;;AAAA;;AACR;;AAAA;;AAEE;;AAAA,8JAAoC,UAApC,EAAoC,CAApC;;AAWsC;;AAAA;;AAElC;;AAAA,wFAAkB,eAAlB,EAAkB,IAAlB;;AAC0B;;AAAA;;AAIxB;;AAAA;;AAGN;;AAAA;;AAGA;;AAAA;;AAGM;;AAAA;;AAGI;;AAAA;;AAE+E;;AAAA;;;;;;;;;;sED5e7FhC,iB,EAAiB;cAP7B,uDAO6B;eAPnB;AACTvB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD,CAHF;AAITO,mBAAS,EAAE,CAAC,0EAAD;AAJF,S;AAOmB,Q;;;;;;;;;;;;;;gBA0B3B,uD;iBAAU,8D,EAAS;AAAC,sBAAQ;AAAT,W;;;gBACnB,uD;iBAAU,wE;;;;;;;;;;;;;;;;;;;;AE/Db;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACcY;;AACI;;AACJ;;;;;;AADwB;;AAAA;;;;;;AAIxB;;AACI;;AACJ;;;;;;AADwB;;AAAA;;;;;;AAIxB;;AACI;;AACJ;;;;;;AADwB;;AAAA;;;;;;AAIxB;;AACI;;AACJ;;;;;;AADwB;;AAAA;;;;QDevB6H,a;AAUX,+BAAc;AAAA;;AARd;AAEA,aAAAC,KAAA,GAAQ,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,SAA1B,EAAqC,OAArC,EAA8CC,GAA9C,CAAkD,UAACC,MAAD;AAAA,2BAAeA,MAAf;AAAA,SAAlD,CAAR;AACA,aAAAC,MAAA,GAAS,CAAC,KAAD,EAAQF,GAAR,CAAY,UAACC,MAAD;AAAA,kDAAsCA,MAAtC;AAAA,SAAZ,CAAT;AACA,aAAAE,OAAA,GAAU,CAAC,KAAD,EAAQH,GAAR,CAAY,UAACC,MAAD;AAAA,kDAAsCA,MAAtC;AAAA,SAAZ,CAAV;AACA,aAAAG,OAAA,GAAU,CAAC,KAAD,EAAQJ,GAAR,CAAY,UAACC,MAAD;AAAA,kDAAsCA,MAAtC;AAAA,SAAZ,CAAV;AACA,aAAAI,OAAA,GAAU,CAAC,KAAD,EAAQL,GAAR,CAAY,UAACC,MAAD;AAAA,kDAAsCA,MAAtC;AAAA,SAAZ,CAAV;AACA,aAAAK,CAAA,GAAGC,MAAH;AAGC;;;;mCAGU,CACV;;;iCACK;AAEJ,iBAAO,wCAAP;AACD;;;;;;;uBApBUT,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,qb;AAAA;AAAA;AC1C1B;;AACA;;AAEA;;AAEA;;AAEE;;AACE;;AAEE;;AACM;;AAGH;;AACA;;AACG;;AAGH;;AACA;;AACG;;AAGH;;AACA;;AACG;;AAGH;;AACL;;AACA;;AAAkF;;AAAoB;;AACxG;;AACF;;AACA;;AACA;;;;AAzBwB;;AAAA;;AACP;;AAAA;;AAIU;;AAAA;;AACV;;AAAA;;AAIU;;AAAA;;AACV;;AAAA;;AAIU;;AAAA;;AACV;;AAAA;;;;;;;mBDfH,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,GAAN,EAAW,kEAAM;AAACU,mBAAS,EAAE;AAAZ,SAAN,CAAX,CADmB,EAEnB,kEAAM,GAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU,EAUV,oEAAQ,iBAAR,EAA2B,CACzB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADyB,CAA3B,CAVU,EAmBV,oEAAQ,iBAAR,EAA2B,CACzB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADyB,CAA3B,CAnBU;;;;;;sEA+BDV,a,EAAa;cArCzB,uDAqCyB;eArCf;AACTtI,kBAAQ,EAAE,UADD;AAETiJ,uBAAa,EAAE,gEAAkBC,IAFxB;AAITjJ,qBAAW,EAAE,uBAJJ;AAKTC,mBAAS,EAAE,CAAC,sBAAD,CALF;AAMTiJ,oBAAU,EAAE,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,GAAN,EAAW,kEAAM;AAACH,qBAAS,EAAE;AAAZ,WAAN,CAAX,CADmB,EAEnB,kEAAM,GAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU,EAUV,oEAAQ,iBAAR,EAA2B,CACzB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADyB,CAA3B,CAVU,EAmBV,oEAAQ,iBAAR,EAA2B,CACzB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,QAAR,EAAkB,CAChB,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAlB,CADgB,CAAlB,CADA,CAFmB,CAArB,CADyB,CAA3B,CAnBU;AANH,S;AAqCe,Q;;;;;;;;;;;;;;;;;;;;AE7C1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaI,mB;AAIX,mCACUxI,WADV,EAEUC,MAFV,EAGUa,YAHV,EAG2C;AAAA;;AAFjC,aAAAd,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAa,YAAA,GAAAA,YAAA;AACL;;;;mCAEM,CACV;;;wCAEY;AAAA;;AACX,cAAML,KAAK,GAAG;AACZgI,oBAAQ,EAAE,KAAKA,QADH;AAEZC,oBAAQ,EAAE,KAAKA;AAFH,WAAd;AAKA,eAAK1I,WAAL,CAAiB2I,iBAAjB,CAAmClI,KAAnC,EAA0CN,SAA1C,CAAoD,UAAAyI,IAAI,EAAI;AAC1D,gBAAGA,IAAI,CAACjF,OAAR,EAAgB;AACd,qBAAI,CAAC3D,WAAL,CAAiB6I,cAAjB,CAAgCD,IAAI,CAACE,KAArC,EAA4CF,IAAI,CAACnI,KAAjD;;AACA,qBAAI,CAACK,YAAL,CAAkBsG,IAAlB,CAAuB,uBAAvB,EAAgD;AAC9CC,wBAAQ,EAAE,eADoC;AAE9CC,uBAAO,EAAE;AAFqC,eAAhD;;AAGA,qBAAI,CAACrH,MAAL,CAAYsH,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD,aAND,MAMO;AACL,qBAAI,CAACzG,YAAL,CAAkBsG,IAAlB,CAAuBwB,IAAI,CAACG,GAA5B,EAAiC;AAC/B1B,wBAAQ,EAAE,cADqB;AAE/BC,uBAAO,EAAE;AAFsB,eAAjC;;AAGA,qBAAI,CAACrH,MAAL,CAAYsH,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AACF,WAbD;AAcD;;;;;;;uBAjCUiB,mB,EAAmB,mI,EAAA,uH,EAAA,6I;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,uW;AAAA;AAAA;ACVhC;;AAAwB;;AAAK;;AAC7B;;AAAM;AAAA,mBAAU,IAAAQ,aAAA,EAAV;AAAyB,WAAzB;;AAEJ;;AACE;;AAAO;;AAAQ;;AACf;;AAAmB;AAAA;AAAA;;AAAnB;;AACF;;AAEA;;AACE;;AAAO;;AAAQ;;AACf;;AAAuB;AAAA;AAAA;;AAAvB;;AACF;;AACA;;AACF;;;;AARuB;;AAAA;;AAKI;;AAAA;;;;;;;;;sEDAdR,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTpJ,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqDgB;;AACQ;;AAA6B;;AAAa;;AAE9C;;AAA2C;;AAAoB;;AACvE;;;;;;AAHyC;;AAAA;;AAEU;;AAAA;;;;;;AAqCjD;;AACG;;AACG;;AACF;;AACJ;;;;;;AAF2C;;AAAA;;;;;;AAH7C;;AACE;;AAKF;;;;;;AAL8C;;AAAA;;;;;;AAS9C;;AACE;;AACM;;AACL;;AACF;;;;;;AAF4C;;AAAA;;;;;;AAH9C;;AACC;;AAKA;;;;;;AAL4C;;AAAA;;;;;;AAOxC;;AACE;;AACM;;AACL;;AACF;;;;;;AAF4C;;AAAA;;;;;;AAHjD;;AACI;;AAKA;;;;;;AAL4C;;AAAA;;;;;;AAOxC;;AACE;;AACM;;AACL;;AACF;;;;;;AAF4C;;AAAA;;;;;;AAHjD;;AACI;;AAKA;;;;;;AAL4C;;AAAA;;;;;;AAOxC;;AACE;;AACM;;AACL;;AACF;;;;;;AAF4C;;AAAA;;;;;;AAHjD;;AACI;;AAKA;;;;;;AAL4C;;AAAA;;;;;;AAgBpD;;AACG;;AAAI;;AAAe;;AAClB;;AAA+B;;AAAsB;;AACzD;;;;;;AAFO;;AAAA;;AAC4B;;AAAA;;;;;;AAUnC;;AACG;;AAAI;;AAAa;;AAChB;;AAAgC;;AAAqB;;AACzD;;;;;;AAFO;;AAAA;;AAC6B;;AAAA;;;;;;AAUpC;;AACG;;AAAI;;AAAa;;AAChB;;AAAgC;;AAAqB;;AACzD;;;;;;AAFO;;AAAA;;AAC6B;;AAAA;;;;;;AASpC;;AACG;;AAAI;;AAAgB;;AACnB;;AAA+B;;AAAqB;;AACxD;;;;;;AAFO;;AAAA;;AAC4B;;AAAA;;;;;;AASnC;;AACG;;AAAI;;AAAe;;AAClB;;AAA+B;;AAAuB;;AAC1D;;;;;;AAFO;;AAAA;;AAC4B;;AAAA;;;;QDjKtC2J,a;AAyBX,6BAAoBrI,eAApB,EAA6DX,MAA7D,EAA4E;AAAA;;AAAxD,aAAAW,eAAA,GAAAA,eAAA;AAAyC,aAAAX,MAAA,GAAAA,MAAA;AAxB7D,aAAAiJ,KAAA,GAAQ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAatB,GAAb,CAAiB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAjB,CAAR;AAGA,aAAArB,MAAA,GAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAkBF,GAAlB,CAAsB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAtB,CAAT;AACA,aAAAC,OAAA,GAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAkBxB,GAAlB,CAAsB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAtB,CAAV;AACA,aAAAE,OAAA,GAAU,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAkBzB,GAAlB,CAAsB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAtB,CAAV;AACA,aAAAG,QAAA,GAAW,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAkB1B,GAAlB,CAAsB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAtB,CAAX;AACA,aAAAI,OAAA,GAAS,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAkB3B,GAAlB,CAAsB,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAtB,CAAT;AAEA,aAAAjB,CAAA,GAAGC,MAAH;AACA,aAAAnH,MAAA,GAAc,EAAd;AACA,aAAA+E,IAAA,GAAW,EAAX;AACA,aAAAP,IAAA,GAAW,EAAX;AACA,aAAAc,OAAA,GAAc,EAAd;AACA,aAAAO,KAAA,GAAY,EAAZ;AACA,aAAA2C,MAAA,GAAY,EAAZ;AACA,aAAAC,MAAA,GAAc,CAAC,EAAD,CAAd;AAQ+E;;;;8BAPzEC,G,EAAUC,S,EAAe;AAC7B,eAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGH,GAAG,CAACI,MAA1B,EAAkCF,CAAC,GAAGC,GAAtC,EAA2CD,CAAC,IAAID,SAAhD,EAA2D;AACzD,iBAAK7B,MAAL,CAAYiC,IAAZ,CAAiBL,GAAG,CAACM,KAAJ,CAAUJ,CAAV,EAAaA,CAAC,GAAGD,SAAjB,CAAjB;AACD;;AACD,iBAAO,KAAK7B,MAAZ;AACD;;;mCAIU;AAAA;;AAET;AACA,eAAKlH,eAAL,CAAqBiE,SAArB,GAAiC1E,SAAjC,CAA2C,UAAA0D,OAAO,EAAG;AACnD,mBAAI,CAAC2F,MAAL,GAAc3F,OAAd;AACD,WAFD,EAGC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF,EAHS,CAWT;;AACA,eAAKM,eAAL,CAAqByE,QAArB,GAAgClF,SAAhC,CAA0C,UAAA8J,SAAS,EAAG;AACpD,mBAAI,CAACjJ,MAAL,GAAciJ,SAAd;AACD,WAFD,EAGC,UAAA3J,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF,EAZS,CAoBT;;AACA,eAAKM,eAAL,CAAqBuF,OAArB,GAA+BhG,SAA/B,CAAyC,UAAA+J,OAAO,EAAI;AAClD,mBAAI,CAACnE,IAAL,GAAYmE,OAAZ;AACD,WAFD,EAGC,UAAA5J,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WANF,EArBS,CA6BR;;AACA,eAAKM,eAAL,CAAqBgF,OAArB,GAA+BzF,SAA/B,CAAyC,UAAAgK,OAAO,EAAI;AACnD,mBAAI,CAAC3E,IAAL,GAAY2E,OAAZ;AACD,WAFA,EAGA,UAAA7J,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WAND,EA9BQ,CAsCR;;AACA,eAAKM,eAAL,CAAqB8F,UAArB,GAAkCvG,SAAlC,CAA4C,UAAAiK,UAAU,EAAI;AACzD,mBAAI,CAAC9D,OAAL,GAAe8D,UAAf;AACD,WAFA,EAGA,UAAA9J,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WAND,EAvCQ,CA+CR;;AACA,eAAKM,eAAL,CAAqBqG,QAArB,GAAgC9G,SAAhC,CAA0C,UAAAkK,SAAS,EAAI;AACtD,mBAAI,CAACxD,KAAL,GAAawD,SAAb;AACD,WAFA,EAGA,UAAA/J,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WAND;AAQF;;;iCACK;AAEJ,iBAAO,yCAAP;AACD;;;;;;;uBAvFU2I,a,EAAa,2I,EAAA,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,gB;AAAA,c;AAAA,+xD;AAAA;AAAA;;;AC1B1B;;AACI;;AAGA;;AA0BJ;;AAGI;;AACI;;AACQ;;AACA;;AAAK;;AAAK;;AAAK;;AACf;;AACI;;AACI;;AACI;;AAA2B;;AAAC;;AAC5B;;AAA2B;;AAAC;;AAC5B;;AAA2B;;AAAC;;AAC5B;;AAA+B;;AAAC;;AAClC;;AACO;;AAEb;;AACZ;;AAGI;;AAAkD;;AAAW;;AAAK;;AAAK;;AACjE;;AACF;;AAKR;;AAEF;;AAGE;;AACA;;AAAK;;AAAK;;AAAK;;AAEb;;AACM;;AACQ;;AAEJ;;AACI;;AAAG;AAAA;;AAAA;;AAAA,+BAA2B,MAA3B;AAAiC,WAAjC;;AAAmC;;AAAI;;AAC9C;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,+BAA2B,MAA3B;AAAiC,WAAjC;;AAAmC;;AAAI;;AAC9C;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,+BAA2B,SAA3B;AAAoC,WAApC;;AAAsC;;AAAO;;AACpD;;AACA;;AACI;;AAAG;AAAA;;AAAA;;AAAA,+BAA2B,OAA3B;AAAkC,WAAlC;;AAAoC;;AAAK;;AAChD;;AACA;;AACQ;;AAAG;AAAA;;AAAA;;AAAA,+BAA2B,OAA3B;AAAkC,WAAlC;;AAAoC;;AAAK;;AAChD;;AACR;;AACJ;;AAEA;;AAGF;;AACE;;AASD;;AAOC;;AAOI;;AAOI;;AAOE;;AACF;;AAEA;;AAAK;;AAAK;;AAIpB;;AAAkD;;AAAK;;AAAK;;AAC5D;;AACA;;AACM;;AAIA;;AAEN;;AACA;;AAAK;;AAAK;;AAEV;;AAAkD;;AAAI;;AAAK;;AAC3D;;AACA;;AACM;;AAIF;;AACJ;;AACA;;AAAK;;AAAK;;AAGV;;AAAkD;;AAAI;;AAAK;;AAC3D;;AACA;;AACM;;AAIF;;AACJ;;AACA;;AAAK;;AAAK;;AAEV;;AAAkD;;AAAO;;AAAK;;AAC9D;;AACA;;AACM;;AAIF;;AACJ;;AACA;;AAAK;;AAAK;;AAEV;;AAAkD;;AAAK;;AAAK;;AAC5D;;AACA;;AACM;;AAIN;;AACF;;AAGE;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAGV;;AACI;;AACI;;AACR;;AACQ;;AACJ;;AACA;;AAAG;;AAAa;;AAChB;;AAAG;;AAAsB;;AACzB;;AAAG;;AAAqB;;AACxB;;AAAG;;AAAe;;AAEtB;;AAEA;;AACQ;;AACJ;;AAAI;;AAAS;;AACb;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AAEjB;;AAEA;;AACQ;;AACJ;;AAAI;;AAAQ;;AACZ;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AAEjB;;AAER;;AACI;;AACA;;AAAI;;AAAgB;;AACxB;;AACQ;;AACJ;;AACJ;;AACF;;AACF;;AACN;;;;;;AA3L0E;;AAAA;;AACd;;AAAA;;AAsC1B;;AAAA;;AAUO;;AAAA;;AAOC;;AAAA;;AAOI;;AAAA;;AAOI;;AAAA;;AAiBH;;AAAA;;AAYA;;AAAA;;AAYA;;AAAA;;AAWD;;AAAA;;AAWA;;AAAA;;;;;;;mBD3KhC,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACb,mBAAS,EAAE;AAAZ,SAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,OAAR,EAAiB,CACf,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAlB,CADe,CAAjB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU;;;;;;sEAYDa,a,EAAa;cAlBzB,uDAkByB;eAlBf;AACT7J,kBAAQ,EAAE,UADD;AAETiJ,uBAAa,EAAE,gEAAkBC,IAFxB;AAITjJ,qBAAW,EAAE,uBAJJ;AAKTC,mBAAS,EAAE,CAAC,sBAAD,CALF;AAMTiJ,oBAAU,EAAE,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACH,qBAAS,EAAE;AAAZ,WAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,OAAR,EAAiB,CACf,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAlB,CADe,CAAjB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU;AANH,S;AAkBe,Q;;;;;;;;;;;;;;;;;;;;;;;;AE1B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;QAQakC,e;AAKX,iCAAc;AAAA;;AAJP,aAAAC,QAAA,GAAU,KAAV;AACP,aAAAC,SAAA,GAAY,4EAAZ;AACA,aAAAC,UAAA,GAAW,6EAAX;AACA,aAAAC,WAAA,GAAY,8EAAZ;AACiB;;;;mCAET,CACP;;;;;;;uBARUJ,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,+lB;AAAA;AAAA;ACsC5B;;AACI;;AACI;;AAAiC;;AAAjC;;AACA;;AAAgC;AAAA;AAAA;;AAC5B;;AACF;;AACA;;AAA8B;AAAA,kCAAkB,IAAlB;AAAsB,WAAtB;;AAC1B;;AACE;;AACE;;AAAmE;;AAAK;;AAAsB;;AAAS;;AAAO;;AAChH;;AACA;;AACI;;AAAuE;;AAAK;;AAAsB;;AAAS;;AAAO;;AACpH;;AAEA;;AACE;;AAA6E;;AAAY;;AAAsB;;AAAS;;AAAO;;AACjI;;AAgBJ;;AACN;;AACJ;;AACJ;;;;AA9BgE;;AAAA;;AAGD;;AAAA;;AAGG;;AAAA;;AAID;;AAAA;;;;;;;;;sEDtDpDA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTlL,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AER5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAmBaqL,oB;AAUX,oCAAmB9J,kBAAnB,EACU+J,eADV,EAGU3K,MAHV,EAIUa,YAJV,EAI2C;AAAA;;AAJxB,aAAAD,kBAAA,GAAAA,kBAAA;AACT,aAAA+J,eAAA,GAAAA,eAAA;AAEA,aAAA3K,MAAA,GAAAA,MAAA;AACA,aAAAa,YAAA,GAAAA,YAAA;AACL;;;;mCAEG;AACN,eAAK+J,WAAL;AACA,eAAKjI,sBAAL;AAED;;;oCAGWC,I,EAAe;AACzB,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKjC,kBAAL,CAAwBkC,mBAAxB,GAA8C;AAC5CC,eAAG,EAAE,EADuC;AAE5CC,gBAAI,EAAE,EAFsC;AAG5CC,gBAAI,EAAE,EAHsC;AAI5CC,gBAAI,EAAE,EAJsC;AAK5CC,yBAAa,EAAE,EAL6B;AAM5CC,kBAAM,EAAE,EANoC;AAO5CC,mBAAO,EAAE;AAPmC,WAA9C;AASD;;;iDAEwB;AAAA;;AACvB,eAAKzC,kBAAL,CAAwB+C,cAAxB,GACCzD,SADD,CACW,UAAA0D,OAAO,EAAG;AACnB,mBAAI,CAAClC,YAAL,GAAoBkC,OAApB;AACA,mBAAI,CAAClC,YAAL,GAAoB,IAAI,0EAAJ,CAAuBkC,OAAvB,CAApB;;AACA,mBAAI,CAACjB,sBAAL;AAMD,WAVD,EAYC,UAAAtC,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WAfF;AAgBC,S,CAED;;;;yCACeuC,I,EAAY;AAAA;;AAC3B,cAAMmB,WAAW,GAAG;AAClBhB,eAAG,EAAE,KAAKA,GADQ;AAElBC,gBAAI,EAAE,KAAKA,IAFO;AAGlBE,gBAAI,EAAE,KAAKA,IAHO;AAIlBD,gBAAI,EAAE,KAAKA,IAJO;AAKlBI,mBAAO,EAAE,KAAKA,OALI;AAMlBF,yBAAa,EAAE,KAAKA,aANF;AAOlBC,kBAAM,EAAE,KAAKA;AAPK,WAApB;;AAUA,cAAG,CAAC,KAAKuH,eAAL,CAAqBE,mBAArB,CAAyC9G,WAAzC,CAAJ,EAA0D;AACxD,iBAAKlD,YAAL,CAAkBsG,IAAlB,CAAuB,2BAAvB,EAAoD;AAACC,sBAAQ,EAAE,cAAX;AAA2BC,qBAAO,EAAE;AAApC,aAApD;AACA,mBAAO,KAAP;AACD;;AACD,eAAKzG,kBAAL,CAAwB0C,eAAxB,CAAwCV,IAAI,CAACnB,KAA7C,EAAoDvB,SAApD,CAA8D,UAACyI,IAAD,EAAU;AACtE,gBAAM1F,IAAI,GAAG,IAAIO,IAAJ,CAASmF,IAAI,CAAC1F,IAAd,EAAoBQ,YAApB,EAAb;;AACA,mBAAI,CAACmH,WAAL,CAAiBhI,IAAjB;;AACA,mBAAI,CAAC/B,YAAL,CAAkBsG,IAAlB,CAAuB,sBAAvB,EAA+C;AAACC,sBAAQ,EAAE,eAAX;AAA4BC,qBAAO,EAAE;AAArC,aAA/C,EAHsE,CAMtE;AACA;AAEA;AACA;AACA;AACA;AACA;;AACD,WAdD;AAgBH;;;;;;;uBAzFYqD,oB,EAAoB,iJ,EAAA,2I,EAAA,uH,EAAA,6I;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,gB;AAAA,a;AAAA,w8D;AAAA;AAAA;;;AClBjC;;AACE;;AACG;;AACA;;AAAK;;AAAK;;AAAK;;AACf;;AACE;;AACC;;AACE;;AAA2B;;AAAI;;AAC/B;;AAA2B;;AAAG;;AAC9B;;AAA2B;;AAAC;;AAC5B;;AAA+B;;AAAG;;AACpC;;AACF;;AACF;;AACF;;AAGF;;AACE;;AACE;;AAA6B;;AAAkB;;AACjD;;AACF;;AAEA;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAEV;;AACE;;AACE;;AACE;;AAA6B;;AAAG;;AAAQ;;AAAI;;AAC5C;;AAAI;;AAC0C;;AAChD;;AACA;;AACI;;AAA6B;;AAAG;;AAC9B;;AAAI;;AACJ;;AAAI;;AAAgK;;AAAU;;AAChL;;AACF;;AAIN;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAGV;;AACE;;AAA6B;;AAAG;;AAAe;;AAAI;;AACrD;;AACA;;AACI;;AACE;;AAAsB;AAAA;;AAAA;;AAAA,mBAAY,IAAAI,gBAAA,OAAZ;AAAmC,WAAnC;;AAClB;;AAA+C;AAAA;AAAA;;AAA/C;;AACE;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACA;;AACA;;AACF;;AACA;;AACI;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACN;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACE;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACQ;;AAAO;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACM;;AAA6B;AAAA;AAAA;;AAA8F;;AAAA;;AAC7H;;AACV;;AAAwC;;AAAgB;;AAC9C;;AACI;;AACE;;AAAyE;AAAA;;AAAA;;AAAA,mBAAS,IAAAF,WAAA,OAAT;AAA2B,WAA3B;;AAA6B;;AAAK;;AAC7G;;AACF;;AACF;;AACF;;AAClB;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AACV;;AACI;;AACE;;AACN;;AACE;;AACE;;AACA;;AAAG;;AAAa;;AAChB;;AAAG;;AAAsB;;AACzB;;AAAG;;AAAqB;;AACxB;;AAAG;;AAAe;;AACpB;;AAEF;;AACE;;AACE;;AAAI;;AAAS;;AACb;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AACnB;;AACA;;AACE;;AACA;;AAAI;;AAAQ;;AACZ;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AACnB;;AAEF;;AACI;;AACA;;AAAI;;AAAgB;;AACxB;;AACA;;AACA;;AACA;;AACA;;;;;;AApEyD;;AAAA;;AAElC;;AAAA,wFAAkB,eAAlB,EAAkB,KAAlB;;AAC0B;;AAAA;;AAIxB;;AAAA;;AAGN;;AAAA;;AAGA;;AAAA;;AAGM;;AAAA;;AAG0B;;AAAA;;;;;;;;;;sEDrDtCF,oB,EAAoB;cAPhC,uDAOgC;eAPtB;AACTvL,kBAAQ,EAAE,iBADD;AAETiJ,uBAAa,EAAE,gEAAkBC,IAFxB;AAITjJ,qBAAW,EAAE,8BAJJ;AAKTC,mBAAS,EAAE,CAAC,6BAAD;AALF,S;AAOsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUU;;AAAuC;;AAAI;;;;;;AAC3C;;AAAwC;;AAAqB;;;;;;AAArB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAK;;;;;;AAC5C;;AAAmC;;AAAY;;;;;;AAAZ;;AAAA;;;;;;AAKnC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAKxC;;AAAuC;;AAAO;;;;;;AAC9C;;AAAwC;;AAAmB;;;;;;AAAnB;;AAAA;;;;;;AAG1C;;;;;;AACA;;;;ADvBR,QAAM0L,YAAY,GAAsB,CACtC;AAACC,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,aAApB;AAAmCiI,YAAM,EAAE,MAA3C;AAAmDC,YAAM,EAAE;AAA3D,KADsC,EAEtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,QAApB;AAA8BiI,YAAM,EAAE,MAAtC;AAA8CC,YAAM,EAAE;AAAtD,KAFsC,EAGtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,SAApB;AAA+BiI,YAAM,EAAE,KAAvC;AAA8CC,YAAM,EAAE;AAAtD,KAHsC,EAItC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,WAApB;AAAiCiI,YAAM,EAAE,MAAzC;AAAiDC,YAAM,EAAE;AAAzD,KAJsC,EAKtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,OAApB;AAA6BiI,YAAM,EAAE,MAArC;AAA6CC,YAAM,EAAE;AAArD,KALsC,EAMtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,QAApB;AAA8BiI,YAAM,EAAE,OAAtC;AAA+CC,YAAM,EAAE;AAAvD,KANsC,EAOtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,UAApB;AAAgCiI,YAAM,EAAE,OAAxC;AAAiDC,YAAM,EAAE;AAAzD,KAPsC,EAQtC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,QAApB;AAA8BiI,YAAM,EAAE,OAAtC;AAA+CC,YAAM,EAAE;AAAvD,KARsC,EAStC;AAACF,cAAQ,EAAE,CAAX;AAAchI,UAAI,EAAE,UAApB;AAAgCiI,YAAM,EAAE,OAAxC;AAAiDC,YAAM,EAAE;AAAzD,KATsC,EAUtC;AAACF,cAAQ,EAAE,EAAX;AAAehI,UAAI,EAAE,MAArB;AAA6BiI,YAAM,EAAE,OAArC;AAA8CC,YAAM,EAAE;AAAtD,KAVsC,CAAxC;;QAkBaC,a;AAQX,+BAAc;AAAA;;AAPd,aAAAC,gBAAA,GAA6B,CAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,QAA/B,CAA7B;AACA,aAAAC,UAAA,GAAa,IAAI,0EAAJ,CAAuBN,YAAvB,CAAb;AAMiB;;;;oCAJLzJ,K,EAAc;AACxB,cAAMC,WAAW,GAAID,KAAK,CAACE,MAAN,CAAkCC,KAAvD;AACA,eAAK4J,UAAL,CAAgB1J,MAAhB,GAAyBJ,WAAW,CAACK,IAAZ,GAAmBC,WAAnB,EAAzB;AACD;;;mCAGO,CACP;;;;;;;uBAXUsJ,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,4iB;AAAA;AAAA;AC5B1B;;AACA;;AACQ;;AAAW;;AAAM;;AACjB;;AAAgB;AAAA,mBAAS,IAAA5D,WAAA,QAAT;AAA4B,WAA5B;;AAAhB;;AACF;;AAEA;;AAGE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAEA;;AACA;;AACF;;AACF;;;;AA7BmB;;AAAA;;AA0BI;;AAAA;;AACP;;AAAA;;;;;;;;;sEDLP4D,a,EAAa;cALzB,uDAKyB;eALf;AACThM,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AE5B1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBgB;;AACI;;AAEJ;;;;;;AAFwB;;AAAA;;;;;;AAF5B;;;;;;AAFJ;;AAEI;;AAOJ;;;;;;AAP0B;;AAAA;;;;;;AA4BtB;;AACH;;AAAyC;;AAAwC;;AAAuF;;AAAU;;AACrL;;;;;;AADkH;;AAAA;;;;;;AAsCxG;;AACQ;;AACE;;AACM;;AAA8D;;AAAiB;;AAC/E;;AAAmF;;AAAa;;AACpG;;AACJ;;AACJ;;;;;;AAJ0E;;AAAA;;AACqB;;AAAA;;;;;;AALlG;;;;;;;;;;;;;;AAqEb;;AACI;;AACI;;AAAwF;;AAAkB;;AAC1G;;AAA+E;;AAAS;;AAC5F;;AACJ;;;;AAHY;;AAAA;;AACD;;AAAA;;;;;;;;AAMX;;AACJ;;AACI;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC1C;;AAAI;;AAAY;;AACR;;AACA;;AAAM;;AAAe;;AAAO;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAnB;;AAC5B;;AACA;;AACA;;AAAM;;AAAa;;AAAO;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAAnB;;AAC1B;;AACA;;AACA;;AAAc;;AACd;;AACJ;;AACJ;;AACA;;;;;;AAVuD;;AAAA;;AAGF;;AAAA;;;;;;;;QD1IhDiM,c;AAYX,8BAAmB1K,kBAAnB,EACU+J,eADV,EAGU9J,YAHV,EAG2C;AAAA;;AAHxB,aAAAD,kBAAA,GAAAA,kBAAA;AACT,aAAA+J,eAAA,GAAAA,eAAA;AAEA,aAAA9J,YAAA,GAAAA,YAAA;AAdV,aAAAoI,KAAA,GAAQ,CAAC,YAAD,EAAc,aAAd,EAA6B,aAA7B,EAA4CtB,GAA5C,CAAgD,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAhD,CAAR;AACA,aAAArB,MAAA,GAAS,CAAC,MAAD,EAAQ,OAAR,EAAiB,OAAjB,EAA0B,OAA1B,EAAmCF,GAAnC,CAAuC,UAACuB,CAAD;AAAA,kDAAiCA,CAAjC;AAAA,SAAvC,CAAT;AACO,aAAA/B,IAAA,GAAe,KAAf;AACA,aAAAoE,UAAA,GAAiB,MAAjB;AAIT,aAAAC,OAAA,GAAa,EAAb;AAES,aAAAC,MAAA,GAAiB,KAAjB;AACA,aAAAC,MAAA,GAAa,MAAb;AAKF;;;;mCACG;AACN,eAAKC,YAAL;AACA,eAAKC,kBAAL;AACD;;;iCAEQ;AACP,eAAKzE,IAAL,GAAY,CAAC,KAAKA,IAAlB,CADO,CAGP;;AACA,cAAG,KAAKA,IAAR,EACE,KAAKoE,UAAL,GAAkB,MAAlB,CADF,KAGE,KAAKA,UAAL,GAAkB,MAAlB;AACH;;;kCAES;AACR,eAAKE,MAAL,GAAc,CAAC,KAAKA,MAApB,CADQ,CAGR;;AACA,cAAG,KAAKA,MAAR,EACE,KAAKC,MAAL,GAAc,MAAd,CADF,KAGE,KAAKA,MAAL,GAAc,MAAd;AACH;;;qCAIY9I,I,EAAe;AAC1B,cAAIA,IAAJ,EACEA,IAAI,CAACC,KAAL;AACF,eAAKjC,kBAAL,CAAwBiL,cAAxB,GAAyC;AACvC9I,eAAG,EAAE,EADkC;AAEvCyF,oBAAQ,EAAE,EAF6B;AAGvCsD,eAAG,EAAE;AAHkC,WAAzC;AAMD;;;oCAEWlJ,I,EAAc;AAAA;;AAEtB,eAAKhC,kBAAL,CAAwBmL,UAAxB,CAAmCnJ,IAAI,CAACnB,KAAxC,EAA+CvB,SAA/C,CAAyD,UAACqD,GAAD,EAAS;AAChE,mBAAI,CAACoI,YAAL,CAAkB/I,IAAlB;;AAEE,mBAAI,CAACgJ,kBAAL;AAGH,WAND;AAUH;;;6CAEoB;AAAA;;AACrB,eAAKhL,kBAAL,CAAwBoL,SAAxB,GACC9L,SADD,CACW,UAAA0D,OAAO,EAAG;AACnB,mBAAI,CAAC4H,OAAL,GAAe5H,OAAf;AAED,WAJD,EAMC,UAAAvD,GAAG,EAAI;AACLC,mBAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,mBAAO,KAAP;AACD,WATF;AAUC;;;;;;;uBAhFUiL,c,EAAc,iJ,EAAA,2I,EAAA,6I;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,gB;AAAA,a;AAAA,u3I;AAAA;AAAA;AC5B3B;;AACA;;AACI;;AAIJ;;AAEA;;AAEA;;AACI;;AACI;;AAUA;;AACQ;;AACQ;;AAA2B;;AAAG;;AAC9B;;AAA2B;;AAAC;;AAC5B;;AAA2B;;AAAE;;AAC7B;;AAA+B;;AAAI;;AACrC;;AACd;;AACJ;;AAEJ;;AAIA;;AAAK;;AAAK;;AAAK;;AAAK;;AAAK;;AAGzB;;AAAK;;AAAK;;AAAK;;AAAK;;AAAK;;AAErB;;AACQ;;AAGR;;AACC;;AAAK;;AAAK;;AAAK;;AAAK;;AAAK;;AAElB;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAEtB;;AACA;;AACI;;AACI;;AAAK;;AAAK;;AAAK;;AACf;;AACI;;AACA;;AAAK;;AAAQ;;AACjB;;AACJ;;AACJ;;AAGA;;AAEQ;;AACE;;AAAmI;;AAAyB;;AAAkC;;AAAqG;;AAA+B;;AAC9T;;AAAa;;AAAK;;AAA0B;;AAAc;;AAAI;;AAAgC;;AAAwS;;AAAI;;AAAM;;AAAM;;AAAM;;AAAkC;;AAAiH;;AAA+B;;AAC3lB;;AAAY;;AAAK;;AAA4B;;AAAe;;AAAI;;AAA+B;;AAAwS;;AAAI;;AAAM;;AAAM;;AAAM;;AAAkC;;AAAkH;;AAA+B;;AAC3kB;;AAAW;;AAAK;;AAA4B;;AAAW;;AAAI;;AAA+B;;AAA+T;;AAAI;;AAAM;;AAAM;;AAAM;;AAAM;;AAAyB;;AAAoC;;AAA+J;;AAA+B;;AAAM;;AAAM;;AAAM;;AAA0wB;;AAE58C;;AAAM;;AAAM;;AAAM;;AAChB;;AACH;;AACD;;AACE;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AACV;;AACE;;AACK;;AACI;;AAUL;;AACJ;;AACJ;;AACA;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAER;;AACM;;AACI;;AACI;;AAAY;;AAA+B;;AAC3C;;AAAY;;AAA8B;;AAC1C;;AAAY;;AAAgC;;AAC5C;;AAAY;;AAAoC;;AACpD;;AACJ;;AACJ;;AACA;;AAAK;;AAAK;;AACV;;AAAK;;AAAK;;AAClB;;AACI;;AACI;;AACR;;AACQ;;AACJ;;AACA;;AAAG;;AAAa;;AAChB;;AAAG;;AAAsB;;AACzB;;AAAG;;AAAqB;;AACxB;;AAAG;;AAAe;;AAEtB;;AAEA;;AACQ;;AACJ;;AAAI;;AAAS;;AACb;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AAEjB;;AAEA;;AACQ;;AACJ;;AAAI;;AAAQ;;AACZ;;AACA;;AAAG;;AAAe;;AAClB;;AAAG;;AAAoB;;AACvB;;AAAG;;AAAc;;AAEjB;;AAER;;AACI;;AACA;;AAA8B;;AAAgB;;AAClD;;AACQ;;AACJ;;AACJ;;AACA;;AAA2B;;AAAiB;AAAA,mBAAS,IAAAW,MAAA,EAAT;AAAiB,WAAjB;;AAAoB;;AAArC;;AAAoF;;AAAK;;AAChH;;AAMJ;;AAEA;;AAAkB;;AAAuC;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAAkC;;AAAqC;;AAAI;;AAAK;;AACrI;;AAgBA;;AACJ;;AAEC;;;;AArKqB;;AAAA;;AA8BgC;;AAAA;;AAsCwF;;AAAA;;AA+DtI;;AAAA;;AAME;;AAAA;;AASA;;AAAA;;;;;;;mBD9II,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAAC/D,mBAAS,EAAE;AAAZ,SAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,OAAR,EAAiB,CACf,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,mBAAS,EAAE;AAAZ,SAAN,CAAlB,CADe,CAAjB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU;;;;;;sEAYDmD,c,EAAc;cAlB1B,uDAkB0B;eAlBhB;AACTnM,kBAAQ,EAAE,WADD;AAETiJ,uBAAa,EAAE,gEAAkBC,IAFxB;AAITjJ,qBAAW,EAAE,wBAJJ;AAKTC,mBAAS,EAAE,CAAC,uBAAD,CALF;AAMTiJ,oBAAU,EAAE,CACV,oEAAQ,eAAR,EAAyB,CACvB,uEAAW,QAAX,EAAqB,CACnB,kEAAM,KAAN,EAAa,kEAAM;AAACH,qBAAS,EAAE;AAAZ,WAAN,CAAb,CADmB,EAEnB,kEAAM,KAAN,EACA,oEAAQ,OAAR,EAAiB,CACf,oEAAQ,QAAR,EAAkB,kEAAM;AAACA,qBAAS,EAAE;AAAZ,WAAN,CAAlB,CADe,CAAjB,CADA,CAFmB,CAArB,CADuB,CAAzB,CADU;AANH,S;AAkBgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AE7B3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKagE,S;AACX,yBAAqBpM,WAArB,EAAsDC,MAAtD,EAAmE;AAAA;;AAA9C,aAAAD,WAAA,GAAAA,WAAA;AAAiC,aAAAC,MAAA,GAAAA,MAAA;AAErD;;;;sCAEa;AACZ,cAAG,KAAKD,WAAL,CAAiBqM,QAAjB,EAAH,EAAgC;AAC9B,mBAAO,IAAP;AACD,WAFD,MAEO;AACL,iBAAKpM,MAAL,CAAYsH,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;uBAZU6E,S,EAAS,0H,EAAA,8G;AAAA,K;;;aAATA,S;AAAS,eAATA,SAAS;;;;;sEAATA,S,EAAS;cADrB;AACqB,Q;;;;;;;;;;;;;;;;;;;;;;;;ACLtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaE,W;AAQX,2BAAoBC,IAApB,EAA+B;AAAA;;AAAX,aAAAA,IAAA,GAAAA,IAAA;AAFX,aAAAC,OAAA,GAAU,OAAV;AAEyB;;;;0CAGlB/L,K,EAAK;AACrB,cAAIgM,OAAO,GAAG,IAAI,qDAAJ,EAAd;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA8B,kBAA9B;AACA,iBAAO,KAAKH,IAAL,CAAUI,IAAV,CAAe,oBAAf,EAAqClM,KAArC,EAA2C;AAACgM,mBAAO,EAAEA;AAAV,WAA3C,EACNG,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;uCAIchE,K,EAAOrI,K,EAAK;AACzBsM,sBAAY,CAACC,OAAb,CAAqB,UAArB,EAAiClE,KAAjC;AACAiE,sBAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAezM,KAAf,CAA9B;AACA,eAAK0M,SAAL,GAAiBrE,KAAjB;AACA,eAAKrI,KAAL,GAAaA,KAAb;AACD;;;oCAEQ;AACP,cAAMqI,KAAK,GAAGiE,YAAY,CAACK,OAAb,CAAqB,UAArB,CAAd;AACA,eAAKD,SAAL,GAAiBrE,KAAjB;AACD;;;mCAEQ;AACP,iBAAOiE,YAAY,CAACK,OAAb,CAAqB,cAArB,MAA0C,IAAjD;AACD;;;iCAEQ;AACP,eAAKD,SAAL,GAAiB,IAAjB;AACA,eAAK1M,KAAL,GAAa,IAAb;AACAsM,sBAAY,CAACM,KAAb;AACD;;;mCACU;AAET,cAAIZ,OAAO,GAAG,IAAI,qDAAJ,EAAd;AACA,eAAKa,SAAL;AACAb,iBAAO,CAACC,MAAR,CAAe,eAAf,EAAgC,KAAKS,SAArC;AACAV,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,iBAAO,KAAKH,IAAL,CAAUgB,GAAV,CAAc,eAAd,EAA+B;AAACd,mBAAO,EAAEA;AAAV,WAA/B,EACNG,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;iCACQrM,K,EAAc;AACrB,iBAAO,KAAK8L,IAAL,CAAUiB,GAAV,CAAc,KAAKhB,OAAL,cAAmB/L,KAAK,CAACuC,GAAzB,CAAd,EAA8CvC,KAA9C,CAAP;AAED;;;;;;;uBArDY6L,W,EAAW,0G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVmB,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,e;AAkBX,+BAAqBnB,IAArB,EAAiC;AAAA;;AAAZ,aAAAA,IAAA,GAAAA,IAAA;AARZ,aAAAC,OAAA,GAAU,QAAV;AACA,aAAAmB,QAAA,GAAW,OAAX;AACA,aAAAC,QAAA,GAAW,MAAX;AACA,aAAAC,QAAA,GAAW,MAAX;AACA,aAAAC,QAAA,GAAU,OAAV;AACA,aAAAC,QAAA,GAAU,SAAV;AAG2B,O,CAGpC;;;;;mCAEWjJ,I,EAAc;AACvB,iBAAO,KAAKyH,IAAL,CAAUI,IAAV,CAAe,KAAKH,OAApB,EAA6B1H,IAA7B,CAAP;AAA6C;;;oCAEjC;AACV,iBAAO,KAAKyH,IAAL,CAAUgB,GAAV,CAAc,KAAKf,OAAnB,EAA4B,KAAKwB,OAAjC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;kCAEOhI,I,EAAc;AACtB,iBAAO,KAAKyH,IAAL,CAAUiB,GAAV,CAAc,KAAKhB,OAAL,cAAmB1H,IAAI,CAAC9B,GAAxB,CAAd,EAA6C8B,IAA7C,CAAP;AAED;;;qCACY9B,G,EAAa;AACxB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKC,OAAL,cAAmBxJ,GAAnB,CAAjB,CAAP;AACD,S,CACD;AAIA;;;;kCAEUiC,K,EAAc;AACtB,iBAAO,KAAKsH,IAAL,CAAUI,IAAV,CAAe,KAAKgB,QAApB,EAA8B1I,KAA9B,CAAP;AAA+C;;;mCAEpC;AACT,iBAAO,KAAKsH,IAAL,CAAUgB,GAAV,CAAc,KAAKI,QAAnB,EAA6B,KAAKK,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;iCAEM7H,K,EAAc;AACrB,iBAAO,KAAKsH,IAAL,CAAUiB,GAAV,CAAc,KAAKG,QAAL,cAAoB1I,KAAK,CAACjC,GAA1B,CAAd,EAA+CiC,KAA/C,CAAP;AAED;;;oCACWjC,G,EAAa;AACvB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKoB,QAAL,cAAoB3K,GAApB,CAAjB,CAAP;AACD,S,CACD;AAIE;;;;iCAESwC,I,EAAY;AACnB,iBAAO,KAAK+G,IAAL,CAAUI,IAAV,CAAe,KAAKiB,QAApB,EAA8BpI,IAA9B,CAAP;AAA8C;;;kCAEpC;AACR,iBAAO,KAAK+G,IAAL,CAAUgB,GAAV,CAAc,KAAKK,QAAnB,EAA6B,KAAKI,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;gCAEKtH,I,EAAY;AAClB,iBAAO,KAAK+G,IAAL,CAAUiB,GAAV,CAAc,KAAKI,QAAL,cAAoBpI,IAAI,CAACxC,GAAzB,CAAd,EAA8CwC,IAA9C,CAAP;AAED;;;mCACUxC,G,EAAa;AACtB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKqB,QAAL,cAAoB5K,GAApB,CAAjB,CAAP;AACD,S,CACD;AAGG;;;;iCAES+C,I,EAAY;AACpB,iBAAO,KAAKwG,IAAL,CAAUI,IAAV,CAAe,KAAKkB,QAApB,EAA8B9H,IAA9B,CAAP;AAA8C;;;kCAEpC;AACR,iBAAO,KAAKwG,IAAL,CAAUgB,GAAV,CAAc,KAAKM,QAAnB,EAA6B,KAAKG,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;gCAEK/G,I,EAAY;AAClB,iBAAO,KAAKwG,IAAL,CAAUiB,GAAV,CAAc,KAAKK,QAAL,cAAoB9H,IAAI,CAAC/C,GAAzB,CAAd,EAA8C+C,IAA9C,CAAP;AAED;;;mCACU/C,G,EAAa;AACtB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKsB,QAAL,cAAoB7K,GAApB,CAAjB,CAAP;AACD,S,CACD;AAEC;;;;kCAEU6D,K,EAAc;AACvB,iBAAO,KAAK0F,IAAL,CAAUI,IAAV,CAAe,KAAKmB,QAApB,EAA8BjH,KAA9B,CAAP;AAA+C;;;mCAEpC;AACT,iBAAO,KAAK0F,IAAL,CAAUgB,GAAV,CAAc,KAAKO,QAAnB,EAA6B,KAAKE,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;iCAEMjG,K,EAAc;AACrB,iBAAO,KAAK0F,IAAL,CAAUiB,GAAV,CAAc,KAAKM,QAAL,cAAoBjH,KAAK,CAAC7D,GAA1B,CAAd,EAA+C6D,KAA/C,CAAP;AAED;;;oCACW7D,G,EAAa;AACvB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKuB,QAAL,cAAoB9K,GAApB,CAAjB,CAAP;AACD,S,CACD;AAGE;;;;oCAEYsD,O,EAAkB;AAC5B,iBAAO,KAAKiG,IAAL,CAAUI,IAAV,CAAe,KAAKoB,QAApB,EAA8BzH,OAA9B,CAAP;AAAiD;;;qCAEpC;AACX,iBAAO,KAAKiG,IAAL,CAAUgB,GAAV,CAAc,KAAKQ,QAAnB,EAA6B,KAAKC,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;mCAEQxG,O,EAAkB;AAC3B,iBAAO,KAAKiG,IAAL,CAAUiB,GAAV,CAAc,KAAKO,QAAL,cAAoBzH,OAAO,CAACtD,GAA5B,CAAd,EAAiDsD,OAAjD,CAAP;AAED;;;sCACatD,G,EAAa;AACzB,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKwB,QAAL,cAAoB/K,GAApB,CAAjB,CAAP;AACD;;;;;;;uBA1II0K,e,EAAe,0G;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAHd;;;;;sEAGDA,e,EAAe;cAJ3B,wDAI2B;eAJhB;AACVD,oBAAU,EAAE;AADF,S;AAIgB,Q;;;;;;;;;;;;;;;;;;;;;;AClB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaQ,kB;AAWX,kCAAqB1B,IAArB,EAAiC;AAAA;;AAAZ,aAAAA,IAAA,GAAAA,IAAA;AALZ,aAAAC,OAAA,GAAS,aAAT;AACA,aAAAmB,QAAA,GAAU,QAAV;AAI2B;;;;wCAIpB3J,W,EAA0B;AACxC,iBAAO,KAAKuI,IAAL,CAAUI,IAAV,CAAe,KAAKH,OAApB,EAA6BxI,WAA7B,EACN4I,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;yCAEkB;AACf,iBAAO,KAAKP,IAAL,CAAUgB,GAAV,CAAc,KAAKf,OAAnB,EAA4B,KAAKwB,OAAjC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;uCAEY9I,W,EAA0B;AACvC,iBAAO,KAAKuI,IAAL,CAAUiB,GAAV,CAAc,KAAKhB,OAAL,cAAmBxI,WAAW,CAAChB,GAA/B,CAAd,EAAoDgB,WAApD,CAAP;AAED;;;0CACiBhB,G,EAAa;AAC7B,iBAAO,KAAKuJ,IAAL,WAAiB,KAAKC,OAAL,cAAmBxJ,GAAnB,CAAjB,CAAP;AACD;;;mCAIU0I,M,EAAgB;AACzB,iBAAO,KAAKa,IAAL,CAAUI,IAAV,CAAe,KAAKgB,QAApB,EAA8BjC,MAA9B,EACNkB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;oCAEa;AACV,iBAAO,KAAKP,IAAL,CAAUgB,GAAV,CAAc,KAAKI,QAAnB,EAA6B,KAAKK,OAAlC,EACNpB,IADM,CACD,2DAAI,UAACC,QAAD;AAAA,mBAAmBA,QAAQ,CAACC,IAAT,EAAnB;AAAA,WAAJ,CADC,CAAP;AAED;;;;;;;uBA3CQmB,kB,EAAkB,0G;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVR,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACd/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAKaS,e;AAEX,iCAAc;AAAA;AAAG;;;;uCAGFC,M,EAAM;AACnB,cAAGA,MAAM,CAAC1J,IAAP,IAAe2J,SAAf,IAA4BD,MAAM,CAACzJ,WAAP,IAAsB0J,SAArD,EAA+D;AAC7D,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;sCAGaC,K,EAAK;AACjB,cAAGA,KAAK,CAACpJ,KAAN,IAAemJ,SAAf,IAA4BC,KAAK,CAACnJ,YAAN,IAAsBkJ,SAArD,EAA+D;AAC7D,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;qCAEYE,I,EAAI;AACf,cAAGA,IAAI,CAACvI,IAAL,IAAaqI,SAAb,IAA0BE,IAAI,CAACtI,YAAL,IAAqBoI,SAAlD,EAA4D;AAC1D,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;qCAEYG,I,EAAI;AACf,cAAGA,IAAI,CAAC/I,IAAL,IAAa4I,SAAb,IAA0BG,IAAI,CAAC9I,YAAL,IAAqB2I,SAAlD,EAA4D;AAC1D,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;wCAEeI,O,EAAO;AACrB,cAAGA,OAAO,CAAClI,OAAR,IAAmB8H,SAAnB,IAAgCI,OAAO,CAACjI,YAAR,IAAwB6H,SAA3D,EAAqE;AACnE,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;sCAEaK,K,EAAK;AACjB,cAAGA,KAAK,CAAC5H,KAAN,IAAeuH,SAAf,IAA4BK,KAAK,CAAC3H,aAAN,IAAuBsH,SAAtD,EAAgE;AAC9D,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;4CAEmBM,W,EAAW;AAC7B,cAAGA,WAAW,CAACzL,IAAZ,IAAoBmL,SAApB,IAAiCM,WAAW,CAACtL,aAAZ,IAA6BgL,SAA9D,IAA2EM,WAAW,CAACrL,MAAZ,IAAsB+K,SAAjG,IAA8GM,WAAW,CAACxL,IAAZ,IAAoBkL,SAAlI,IAA+IM,WAAW,CAACpL,OAAZ,IAAuB8K,SAAtK,IAAmLM,WAAW,CAACxL,IAAZ,IAAoBkL,SAAvM,IAAoNM,WAAW,CAACvL,IAAZ,IAAoBiL,SAA3O,EAAqP;AACnP,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,mBAAO,IAAP;AACD;AACF;;;;;;;uBA5DUF,e;AAAe,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVT,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;ACL5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMkB,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAvO,GAAG;AAAA,aAAIC,OAAO,CAACuO,KAAR,CAAcxO,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Client';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n    <flash-messages></flash-messages>\n\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport {RouterModule, Routes} from '@angular/router'; \nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ValidateService } from './services/validate.service';\nimport { EditMenuService } from './services/editmenu.service';\nimport { NO_ERRORS_SCHEMA } from '@angular/core';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { EditMenuComponent } from './components/edit-menu/edit-menu.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginadminComponent } from './components/loginadmin/loginadmin.component';\nimport { AuthGuard } from './guards/auth.guard';\nimport { AdminpComponent } from './components/adminp/adminp.component';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { ReservationComponent } from './components/reservation/reservation.component';\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport {MatTableModule} from '@angular/material/table';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport {MatButtonModule} from '@angular/material/button';\nimport { TestComponent } from './components/test/test.component';\nimport {MatSortModule} from '@angular/material/sort';\nimport { TesthComponent } from './components/testh/testh.component';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\n\n\n/// import {\n//   MatTableModule,\n//   MatProgressSpinnerModule,\n//   MatFormFieldModule,\n//   MatInputModule,\n//   MatButtonModule,\n//   MatDatepickerModule,\n//   MatNativeDateModule,\n//   MatToolbarModule,\n// } from '@angular/material';\n\nconst appRoutes: Routes = [\n  // {path:'', component: HomeComponent},\n  {path:'menu', component: MenuComponent},\n {path:'admin', component: EditMenuComponent},\n {path:'login', component: LoginadminComponent},\n {path:'adminp', component: AdminpComponent},\n {path:'reservation', component: ReservationComponent},\n {path:'test', component: TestComponent},\n {path:'testh', component: TesthComponent},\n  {path:'', component: TesthComponent},\n\n\n\n\n\n\n\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MenuComponent,\n    NavbarComponent,\n    EditMenuComponent,\n    LoginadminComponent,\n    AdminpComponent,\n    ReservationComponent,\n    TestComponent,\n    TesthComponent\n    \n      ],\n  imports: [   \n     FormsModule,\n     HttpModule,\n     NgbModule,\n     FontAwesomeModule,\n     BrowserAnimationsModule,\n     ReactiveFormsModule,\n     HttpClientModule,\n     FlashMessagesModule.forRoot(),\n     RouterModule.forRoot(appRoutes),\n     MDBBootstrapModule.forRoot(),\n     MatTableModule,\n     MatProgressSpinnerModule,\n     MatFormFieldModule,\n     MatInputModule,\n     MatButtonModule,\n     MatDatepickerModule,\n     MatNativeDateModule,\n     MatToolbarModule,\n     MatSelectModule,\n     MatPaginatorModule,\n    BrowserModule,\n    AppRoutingModule,\n    MatSortModule,\n    MatGridListModule\n\n    //NgbModule.forRoot()\n  ],\n  schemas: [NO_ERRORS_SCHEMA],\n\n  providers: [ValidateService, EditMenuService, AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { Admin } from 'src/app/services/menumodel';\n\n@Component({\n  selector: 'app-adminp',\n  templateUrl: './adminp.component.html',\n  styleUrls: ['./adminp.component.css']\n})\nexport class AdminpComponent implements OnInit {\n  user:any;\n\n  constructor(private authService:AuthService, private router:Router) { }\n\n  ngOnInit(){\n    this.authService.getAdmin().subscribe(profile => {\n      this.user = profile.user;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n  }\n\n  onEdit(admin: Admin) {\n    this.authService.selectedAdmin = admin;\n  }\n  }\n\n","<head>\n  <title>\n    Profile Page\n  </title>\n  <link href=\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n</head>\n<Body>\n  \n<div *ngIf=\"user\" class=\"title\" style=\"position: relative; bottom: -200px;\">\n\n    <h1><i class=\"fa fa-user-circle\" aria-hidden=\"true\"></i>  {{user.username}} </h1>\n      <h3  type=\"password\"> <i class=\"fa fa-key\" aria-hidden=\"true\"></i>\n         {{user.password}}</h3>\n         <button>Edit</button>\n\n  </div>\n</Body>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {EditMenuService } from '../../services/editmenu.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { NgForm }   from '@angular/forms';\nimport { Ditore} from 'src/app/services/menumodel';\nimport { Pasta } from 'src/app/services/menumodel';\nimport { Fish } from 'src/app/services/menumodel';\nimport { Meat } from 'src/app/services/menumodel';\nimport { Drink } from 'src/app/services/menumodel';\nimport { Dessert } from 'src/app/services/menumodel';\nimport { Reservation } from 'src/app/services/reservationmodel';\nimport { Observable, interval, Subscription } from 'rxjs';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatGridListModule} from '@angular/material/grid-list';\n\nimport {ReservationService } from '../../services/reservation.service';\nimport {MatSort} from '@angular/material/sort';\n\n\n\n\n\n\ndeclare var M: any;\n\n@Component({\n  selector: 'app-edit-menu',\n  templateUrl: './edit-menu.component.html',\n  styleUrls: ['./edit-menu.component.css'],\n  providers: [EditMenuService]\n\n})\nexport class EditMenuComponent implements OnInit {\n  _id: string;\n  date: string;\n  time: string;\n  name: string;\n  number: string;\n  specification: string;\n  persons: string;\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.reservations.filter = filterValue.trim().toLowerCase();\n  }\n  private updateSubscription: Subscription;\n\n  ditores: any = [];\n  pastas: any = [];\n  reservations: MatTableDataSource<any>;\n  meats: any = [];\n  fishs: any = [];\n  desserts: any = [];\n  drinks: any = [];\n  public columns = ['date', 'name', 'time', 'number', 'persons', 'specification', 'cancel'];\n  loadingReservation = false;\n\n  \n  pageSizeOptions;\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  constructor(public editmenuService: EditMenuService,\n    private authService:AuthService,\n    public reservationService:ReservationService,\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n\n  ngOnInit() {\n    this.resetForm();\n    this.refreshDitoreList();\n    this.resetFormP();\n    this.refreshPastaList();\n    this.resetFormF();\n    this.refreshFishList();\n    this.resetFormM();\n    this.refreshMeatList();\n    this.resetFormDr();\n    this.refreshDrinkList();\n    this.resetFormD();\n    this.refreshDessertList();\n    this.resetFormR();\n    this.refreshReservationList();\n\n//     this.updateSubscription = interval(600000).subscribe(\n//       (val) => { this.refreshReservationList()\n//     }\n// );\n\n}\n\n// Reservation functions\nresetFormR(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.reservationService.selectedReservation = {\n    _id: \"\",\n    name: \"\",\n    date: \"\",\n    time: \"\",\n    specification: \"\",\n    number: \"\",\n    persons: \"\"\n  }\n}\n\nonSubmitR(form: NgForm) {\n\n    this.reservationService.postReservation(form.value).subscribe((res) => {\n      const date = new Date(res.date).toDateString();\n      this.resetFormR(form);\n\n      if(res.success){\n        this.refreshReservationList();\n\n      \n      } \n    });\n \n\n  \n}\n\nrefreshReservationList() {\nthis.reservationService.getReservation()\n.subscribe(allmenu=> {\n  this.reservations = allmenu;\n  this.reservations = new MatTableDataSource(allmenu);\n  this.reservations.sort = this.sort;\n  this.reservations.paginator = this.paginator;\n\n\n\n},\n\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditR(reservation: Reservation) {\n  this.reservationService.selectedReservation = reservation;\n}\n\nonDeleteR(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.reservationService.deleteReservation(_id).subscribe((res) => {\n      this.resetFormR(form);\n  this.refreshReservationList();\n\n      M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n    });\n  }\n}\n\n\nreloadReservation() {\n  this.loadingReservation = true; \n  this.refreshReservationList(); \n  setTimeout(() => {\n    this.loadingReservation = false; \n  }, 4000);\n}\n\n  // Ditore functions\n\n  resetForm(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.editmenuService.selectedDitore = {\n      _id: \"\",\n      food: \"\",\n      description: \"\"\n    }\n  }\n  onSubmit(form: NgForm) {\n    if (form.value._id == \"\") {\n      this.editmenuService.postDitore(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshDitoreList();\n\n      });\n    }\n    else {\n      this.editmenuService.putDitore(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.refreshDitoreList();\n\n        M.toast({ html: 'Updated successfully', classes: 'rounded' });\n      });\n    }\n  }\n\n  refreshDitoreList() {\n  this.editmenuService.getDitore().subscribe(allmenu=> {\n    this.ditores = allmenu;\n  },\n   err => {\n     console.log(err);\n     return false;\n   });\n  }\n\n  onEdit(dite: Ditore) {\n    this.editmenuService.selectedDitore = dite;\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    if (confirm('Are you sure to delete this record ?') == true) {\n      this.editmenuService.deleteDitore(_id).subscribe((res) => {\n        this.resetForm(form);\n    this.refreshDitoreList();\n\n        M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n      });\n    }\n  }\n// end ditore functions\n\n\n// Pasta functions\nresetFormP(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.editmenuService.selectedPasta = {\n    _id: \"\",\n    pasta: \"\",\n    descriptionp: \"\"\n  }\n}\n\nonSubmitP(form: NgForm) {\n  if (form.value._id == \"\") {\n    this.editmenuService.postPasta(form.value).subscribe((res) => {\n      this.resetFormP(form);\n      this.refreshPastaList();\n\n    });\n  }\n  else {\n    this.editmenuService.putPasta(form.value).subscribe((res) => {\n      this.resetFormP(form);\n      this.refreshPastaList();\n\n      M.toast({ html: 'Updated successfully', classes: 'rounded' });\n    });\n  }\n}\n\nrefreshPastaList() {\nthis.editmenuService.getPasta().subscribe(allmenu=> {\n  this.pastas = allmenu;\n},\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditP(pasta: Pasta) {\n  this.editmenuService.selectedPasta = pasta;\n}\n\nonDeleteP(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.editmenuService.deletePasta(_id).subscribe((res) => {\n      this.resetFormP(form);\n  this.refreshPastaList();\n\n      M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n    });\n  }\n}\n// end Of pasta functions\n\n\n\n// Fish functions\nresetFormF(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.editmenuService.selectedFish = {\n    _id: \"\",\n    fish: \"\",\n    descriptionf: \"\"\n  }\n}\n\nonSubmitF(form: NgForm) {\n  if (form.value._id == \"\") {\n    this.editmenuService.postFish(form.value).subscribe((res) => {\n      this.resetFormF(form);\n      this.refreshFishList();\n\n    });\n  }\n  else {\n    this.editmenuService.putFish(form.value).subscribe((res) => {\n      this.resetFormF(form);\n      this.refreshFishList();\n\n      M.toast({ html: 'Updated successfully', classes: 'rounded' });\n    });\n  }\n}\n\nrefreshFishList() {\nthis.editmenuService.getFish().subscribe(allmenu=> {\n  this.fishs = allmenu;\n},\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditF(fish: Fish) {\n  this.editmenuService.selectedFish = fish;\n}\n\nonDeleteF(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.editmenuService.deleteFish(_id).subscribe((res) => {\n      this.resetFormF(form);\n  this.refreshFishList();\n\n      M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n    });\n  }\n}\n// end Of fish functions\n\n\n\n// Meat functions\nresetFormM(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.editmenuService.selectedMeat = {\n    _id: \"\",\n    meat: \"\",\n    descriptionm: \"\"\n  }\n}\n\nonSubmitM(form: NgForm) {\n  if (form.value._id == \"\") {\n    this.editmenuService.postMeat(form.value).subscribe((res) => {\n      this.resetFormM(form);\n      this.refreshMeatList();\n\n    });\n  }\n  else {\n    this.editmenuService.putMeat(form.value).subscribe((res) => {\n      this.resetFormM(form);\n      this.refreshMeatList();\n\n      M.toast({ html: 'Updated successfully', classes: 'rounded' });\n    });\n  }\n}\n\nrefreshMeatList() {\nthis.editmenuService.getMeat().subscribe(allmenu=> {\n  this.meats = allmenu;\n},\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditM(meat: Meat) {\n  this.editmenuService.selectedMeat = meat;\n}\n\nonDeleteM(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.editmenuService.deleteMeat(_id).subscribe((res) => {\n      this.resetFormM(form);\n  this.refreshMeatList();\n\n      M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n    });\n  }\n}\n// end Of meat functions\n\n\n\n// Dessert functions\nresetFormD(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.editmenuService.selectedDessert = {\n    _id: \"\",\n    dessert: \"\",\n    descriptiond: \"\"\n  }\n}\n\nonSubmitD(form: NgForm) {\n  if (form.value._id == \"\") {\n    this.editmenuService.postDessert(form.value).subscribe((res) => {\n      this.resetFormD(form);\n      this.refreshDessertList();\n\n    });\n  }\n  else {\n    this.editmenuService.putDessert(form.value).subscribe((res) => {\n      this.resetFormD(form);\n      this.refreshDessertList();\n\n      M.toast({ html: 'Updated successfully', classes: 'rounded' });\n    });\n  }\n}\n\nrefreshDessertList() {\nthis.editmenuService.getDessert().subscribe(allmenu=> {\n  this.desserts = allmenu;\n},\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditD(dessert: Dessert) {\n  this.editmenuService.selectedDessert = dessert;\n}\n\nonDeleteD(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.editmenuService.deleteDessert(_id).subscribe((res) => {\n      this.resetFormD(form);\n  this.refreshDessertList();\n\n      M.toast({ html: 'Deleted successfully', classes: 'rounded' });\n    });\n  }\n}\n// end Of meat functions\n\n\n\n// Drink functions\nresetFormDr(form?: NgForm) {\n  if (form)\n    form.reset();\n  this.editmenuService.selectedDrink = {\n    _id: \"\",\n    drink: \"\",\n    descriptiondr: \"\"\n  }\n}\n\nonSubmitDr(form: NgForm) {\n  if (form.value._id == \"\") {\n    this.editmenuService.postDrink(form.value).subscribe((res) => {\n      this.resetFormDr(form);\n      this.refreshDrinkList();\n\n    });\n  }\n  else {\n    this.editmenuService.putDrink(form.value).subscribe((res) => {\n      this.resetFormDr(form);\n      this.refreshDrinkList();\n\n      M.toast({ html: 'Updated successfully', classes: 'rounded' });\n    });\n  }\n}\n\nrefreshDrinkList() {\nthis.editmenuService.getDrink().subscribe(allmenu=> {\n  this.drinks = allmenu;\n},\n err => {\n   console.log(err);\n   return false;\n });\n}\n\nonEditDr(drink: Drink) {\n  this.editmenuService.selectedDrink = drink;\n}\n\nonDeleteDr(_id: string, form: NgForm) {\n  if (confirm('Are you sure to delete this record ?') == true) {\n    this.editmenuService.deleteDrink(_id).subscribe((res) => {\n      this.resetFormDr(form);\n  this.refreshDrinkList();\n\n    });\n  }\n}\n// end Of meat functions\n\n\nonLogoutClick() {\n  this.authService.logout();\n  this.flashMessage.show('You are logged out', {\n    cssClass: 'alert-success', timeout: 3000\n  });\n  this.router.navigate(['/login']);\n  return false;\n}\n\n}","<!-- Pasta, meat, drink, dessert, ditore, fish buttons -->\n<div class=\"buttons\" style=\"bottom: -200px; position: relative;\"> \n    <div class=\"row\">\n            <input type=\"hidden\" #selection>\n        <div class=\"col-sm-2\">\n            <p (click)=\"selection.value = 'pasta'\">Ditore</p>\n        </div>                      \n        <div class=\"col-sm-2\">\n            <p (click)=\"selection.value = 'meat'\">Meat</p>\n        </div>\n        <div class=\"col-sm-2\">\n            <p (click)=\"selection.value = 'fish'\">Fish</p>\n        </div>\n        <div class=\"col-sm-2\">\n            <p (click)=\"selection.value = 'dessert'\">Dessert</p>\n        </div>\n        <div class=\"col-sm-2\">\n            <p (click)=\"selection.value = 'drink'\">Drink</p>\n        </div>\n        <div class=\"col-sm-2\">\n                <p (click)=\"selection.value = 'ditore'\">Pasta</p>\n          </div>\n\n    </div>\n    <button [routerLink]=\"['/login']\">Logout</button>\n    <button [routerLink]=\"['/adminp']\">Edit Password</button>\n</div>\n<!-- end -->\n\n\n<!-- Insert, edit and delete menu -->\n<div class=\"menu\" class=\"terminal\" [ngSwitch]=\"selection.value\"  style=\"bottom: -200px; position: relative;\">\n    <div class=\"text-center\" *ngSwitchDefault>\n            <p>Provo</p>\n     </div>\n\n     <!-- Ditore menu -->\n<div class=\"text-center\"  *ngSwitchCase=\"'ditore'\">\n<div class=\"row\">\n  <div class=\"col s12\">\n    <div class=\"card\">\n      <div class=\"card-content white-text\">\n        <div class=\"row\">\n          <!-- form -->\n          <div class=\"col s5\">\n            <form #ditoreForm=\"ngForm\" (ngSubmit)=\"onSubmit(ditoreForm)\" >\n              <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDitore._id\">\n              <div class=\"row\">\n                <div class=\"input-field col s12\">\n                  <input type=\"text\" name=\"food\" #food=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDitore.food\" placeholder=\"Enter full name\" required>\n                  <label>Name :\n                    <label class=\"red-text\">*</label>\n                  </label>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"input-field col s12\">\n                  <input type=\"text\" name=\"description\" #description=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDitore.description\" placeholder=\"Enter full name\" required>\n                  <label>Position :</label>\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"input-field col s12\">\n                  <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(ditoreForm)\">Reset</button>\n                  <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!ditoreForm.valid\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n          <!-- end of form -->\n\n          <!-- List of ditore food -->\n          <div  style=\"color: black; position: relative;\" class=\"col s7\">\n              <table class=\"responsive-table highlight\">\n                  <thead>\n                    <tr>\n                      <th>Ditore food</th>\n                    </tr>\n                  </thead>\n                  <tr style=\"color: black;\" *ngFor=\"let dite of ditores\">\n                      <div class=\"text-center\">\n                          <h3 >{{dite.food}}</h3>\n                      </div>\n                          <p>{{dite.description}}</p>\n                          <br/><br/>\n                          <td>\n                        <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                                <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEdit(dite)\">Edit</button>\n                                <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDelete(dite._id,ditoreForm)\">Delete</button>\n                            </div>\n                          </div>\n                      </td>\n                  </tr>\n                </table>\n          </div>\n          <!-- end of list ditore food -->\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n</div>\n<!-- end of ditore food -->\n\n\n<!-- Pasta menu -->\n<div class=\"text-center\"  *ngSwitchCase=\"'pasta'\" > \n    <div class=\"row\">\n      <div class=\"col s12\">\n        <div class=\"card\">\n          <div class=\"card-content white-text\">\n            <div class=\"row\">\n              <!-- Pasta form -->\n              <div class=\"col s5\">\n                <form #pastaForm=\"ngForm\" (ngSubmit)=\"onSubmitP(pastaForm)\">\n                  <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedPasta._id\">\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input type=\"text\" name=\"pasta\" #food=\"ngModel\" [(ngModel)]=\"editmenuService.selectedPasta.pasta\" placeholder=\"Enter full name\" required>\n                      <label>Pasta :\n                        <label class=\"red-text\">*</label>\n                      </label>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <input type=\"text\" name=\"descriptionp\" #description=\"ngModel\" [(ngModel)]=\"editmenuService.selectedPasta.descriptionp\" placeholder=\"Enter full name\" required>\n                      <label>Position :</label>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"input-field col s12\">\n                      <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(pastaForm)\">Reset</button>\n                      <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!pastaForm.valid\">Submit</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <!-- end of pasta form -->\n\n              <!-- List of pasta menu -->\n              <div  style=\"color: black; position: relative; \" class=\"col s7\">\n                  <table class=\"responsive-table highlight\">\n                      <thead>\n                        <tr>\n                          <th>Pasta</th>\n                        </tr>\n                      </thead>\n                      <tr style=\"color: black;\" *ngFor=\"let pasta of pastas\">\n                          <div class=\"text-center\">\n                              <h3 >{{pasta.pasta}}</h3>\n                          </div>\n                              <p>{{pasta.descriptionp}}</p>\n                              <br/><br/>\n                        <td>\n                            <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEditP(pasta)\">Edit</button>\n                                    <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDeleteP(pasta._id,pastaForm)\">Delete</button>\n                                </div>\n                              </div>\n                          </td>\n                      </tr>\n                    </table>\n              </div>\n              <!-- end pasta list menu -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n    <!-- end of pasta menu -->\n\n<!-- Fish menu -->\n    <div class=\"text-center\"  *ngSwitchCase=\"'fish'\">\n        <div class=\"row\">\n          <div class=\"col s12\">\n            <div class=\"card\">\n              <div class=\"card-content white-text\">\n                <div class=\"row\">\n                  <!-- Fish form -->\n                  <div class=\"col s5\">\n                    <form #fishForm=\"ngForm\" (ngSubmit)=\"onSubmitF(fishForm)\">\n                      <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedFish._id\">\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <input type=\"text\" name=\"fish\" #fish=\"ngModel\" [(ngModel)]=\"editmenuService.selectedFish.fish\" placeholder=\"Enter full name\" required>\n                          <label>Name :\n                            <label class=\"red-text\">*</label>\n                          </label>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <input type=\"text\" name=\"descriptionf\" #descriptionf=\"ngModel\" [(ngModel)]=\"editmenuService.selectedFish.descriptionf\" placeholder=\"Enter full name\" required>\n                          <label>Position :</label>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(fishForm)\">Reset</button>\n                          <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!fishForm.valid\">Submit</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                  <!-- end of fish menu form -->\n\n                  <!-- list of fish menu -->\n                  <div   style=\"color: black; position: relative;\" class=\"col s7\">\n                      <table class=\"responsive-table highlight\">\n                          <thead>\n                            <tr>\n                              <th>Fish</th>\n                            </tr>\n                          </thead>\n                          <tr *ngFor=\"let fish of fishs\">\n                              <div class=\"text-center\">\n                                  <h3 style=\"color: black;\">{{fish.fish}}</h3>\n                              </div>\n                                  <p style=\"color: black;\">{{fish.descriptionf}}</p>\n                                  <br/><br/>\n                            <td>\n                                <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                        <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEditF(fish)\">Edit</button>\n                                        <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDeleteF(fish._id,fishForm)\">Delete</button>\n                                    </div>\n                                  </div>\n                              </td>\n                          </tr>\n                        </table>\n                  </div>\n                  <!-- end of fish menu list -->\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </div>\n        <!-- end of fish menu -->\n\n        <!-- meat menu -->\n        <div class=\"text-center\"  *ngSwitchCase=\"'meat'\">\n            <div class=\"row\">\n              <div class=\"col s12\">\n                <div class=\"card\">\n                  <div class=\"card-content white-text\">\n                    <div class=\"row\">\n                      <!-- form menu meat -->\n                      <div class=\"col s5\">\n                        <form #meatForm=\"ngForm\" (ngSubmit)=\"onSubmitM(meatForm)\">\n                          <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedMeat._id\">\n                          <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                              <input type=\"text\" name=\"meat\" #meat=\"ngModel\" [(ngModel)]=\"editmenuService.selectedMeat.meat\" placeholder=\"Enter full name\" required>\n                              <label>Name :\n                                <label class=\"red-text\">*</label>\n                              </label>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                              <input type=\"text\" name=\"descriptionm\" #descriptionm=\"ngModel\" [(ngModel)]=\"editmenuService.selectedMeat.descriptionm\" placeholder=\"Enter full name\" required>\n                              <label>Position :</label>\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"input-field col s12\">\n                              <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(meatForm)\">Reset</button>\n                              <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!meatForm.valid\">Submit</button>\n                            </div>\n                          </div>\n                        </form>\n                      </div>\n                      <!-- end of form menu meat -->\n\n                      <!-- meat list menu -->\n                      <div   style=\"color: black; position: relative;\" class=\"col s7\">\n                          <table class=\"responsive-table highlight\">\n                              <thead>\n                                <tr>\n                                  <th>Meat</th>\n                                </tr>\n                              </thead>\n                              <tr style=\"color: black;\" *ngFor=\"let meat of meats\">\n                                  <div class=\"text-center\">\n                                      <h3>{{meat.meat}}</h3>\n                                  </div>\n                                      <p>{{meat.descriptionm}}</p>\n                                      <br/><br/>\n                                <td>\n                                    <div class=\"row\">\n                                        <div class=\"input-field col s12\">\n                                            <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEditM(meat)\">Edit</button>\n                                            <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDeleteM(meat._id,meatForm)\">Delete</button>\n                                        </div>\n                                      </div>\n                                  </td>\n                              </tr>\n                            </table>\n                      </div>\n                      <!-- end of menu list meat -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            </div>\n<!-- end of meat menu -->\n\n\n<!-- drink menu -->\n            <div class=\"text-center\"  *ngSwitchCase=\"'drink'\">\n                <div class=\"row\">\n                  <div class=\"col s12\">\n                    <div class=\"card\">\n                      <div class=\"card-content white-text\">\n                        <div class=\"row\">\n                          <!-- form drink menu -->\n                          <div class=\"col s5\">\n                            <form #drinkForm=\"ngForm\" (ngSubmit)=\"onSubmitDr(drinkForm)\">\n                              <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDrink._id\">\n                              <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                  <input type=\"text\" name=\"drink\" #drink=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDrink.drink\" placeholder=\"Enter full name\" required>\n                                  <label>Drink :\n                                    <label class=\"red-text\">*</label>\n                                  </label>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                  <input type=\"text\" name=\"descriptiondr\" #descriptiondr=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDrink.descriptiondr\" placeholder=\"Enter full name\" required>\n                                  <label>Position :</label>\n                                </div>\n                              </div>\n                              <div class=\"row\">\n                                <div class=\"input-field col s12\">\n                                  <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(drinkForm)\">Reset</button>\n                                  <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!drinkForm.valid\">Submit</button>\n                                </div>\n                              </div>\n                            </form>\n                          </div>\n                          <!-- end of form drink menu -->\n\n                          <!-- drink menu list -->\n                          <div  style=\"color: black; position: relative; \" class=\"col s7\">\n                              <table class=\"responsive-table highlight\">\n                                  <thead>\n                                    <tr>\n                                      <th>Drink</th>\n                                      <th></th>\n                                    </tr>\n                                  </thead>\n                                  <tr style=\"color: black;\" *ngFor=\"let drink of drinks\">\n                                      <div class=\"text-center\">\n                                          <h3>{{drink.drink}}</h3>\n                                      </div>\n                                          <p>{{drink.descriptiondr}}</p>\n                                          <br/><br/>\n                                    <td>\n                                        <div class=\"row\">\n                                            <div class=\"input-field col s12\">\n                                                <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEditDr(drink)\">Edit</button>\n                                                <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDeleteDr(drink._id,drinkForm)\">Delete</button>\n                                            </div>\n                                          </div>\n                                      </td>\n                                  </tr>\n                                </table>\n                          </div>\n                          <!-- end of drink menu list -->\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                </div>\n<!-- end of drink menu -->\n\n\n<!-- dessert menu -->\n                <div class=\"text-center\"  *ngSwitchCase=\"'dessert'\">\n                    <div class=\"row\">\n                      <div class=\"col s12\">\n                        <div class=\"card\">\n                          <div class=\"card-content white-text\">\n                            <div class=\"row\">\n                              <!-- form dessert menu -->\n                              <div class=\"col s5\">\n                                <form #dessertForm=\"ngForm\" (ngSubmit)=\"onSubmitD(dessertForm)\">\n                                  <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDessert._id\">\n                                  <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                      <input type=\"text\" name=\"dessert\" #dessert=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDessert.dessert\" placeholder=\"Enter full name\" required>\n                                      <label>Dessert :\n                                        <label class=\"red-text\">*</label>\n                                      </label>\n                                    </div>\n                                  </div>\n                                  <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                      <input type=\"text\" name=\"descriptiond\" #descriptiond=\"ngModel\" [(ngModel)]=\"editmenuService.selectedDessert.descriptiond\" placeholder=\"Enter full name\" required>\n                                      <label>Position :</label>\n                                    </div>\n                                  </div>\n                                  <div class=\"row\">\n                                    <div class=\"input-field col s12\">\n                                      <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetForm(dessertForm)\">Reset</button>\n                                      <button class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!dessertForm.valid\">Submit</button>\n                                    </div>\n                                  </div>\n                                </form>\n                              </div>\n                              <!-- end of form dessert menu -->\n\n                              <!-- dessert menu list -->\n                              <div  style=\"color: black; position: relative;\" class=\"col s7\">\n                                  <table class=\"responsive-table highlight\">\n                                      <thead>\n                                        <tr>\n                                          <th>Dessert</th>\n                                        </tr>\n                                      </thead>\n                                      <tr style=\"color: black; position: relative; left: -50px;\" *ngFor=\"let dessert of desserts\">\n                                          <div class=\"text-center\">\n                                              <h3>{{dessert.dessert}}</h3>\n                                          </div>\n                                              <p>{{dessert.descriptiond}}</p>\n                                              <br/><br/>\n                                        <td>\n                                            <div class=\"row\">\n                                                <div class=\"input-field col s12\">\n                                                    <button class=\"btn btn-custom right\" type=\"button\" (click)=\"onEditD(dessert)\">Edit</button>\n                                                    <button class=\"btn btn-custom right\" type=\"submit\" (click)=\"onDeleteD(dessert._id,dessertForm)\">Delete</button>\n                                                </div>\n                                              </div>\n                                          </td>\n                                      </tr>\n                                    </table>\n                              </div>\n                              <!-- end of menu dessert list -->\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    </div>\n                    <!-- end of dessert menu -->\n\n\n                    <!-- Reservation table -->\n<div class=\"container\" >\n    <mat-form-field >\n        <mat-label style=\"color: purple; background: #D3D3D3 ; font-size: 140%;\">Search</mat-label>\n        <input style=\"color: purple; background: #D3D3D3; font-size: 250%;\"  matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\">\n      </mat-form-field>\n  <table mat-table [dataSource]=\"reservations\" class=\"mat-elevation-z8\" matSort>\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>  Appointment Date </th>\n      <td mat-cell *matCellDef=\"let reservation\"> {{ reservation.date | date:'dd/MM/yyyy'}} </td>\n    </ng-container>\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\n      <td mat-cell *matCellDef=\"let reservation \"> {{ reservation.name }} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"time\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header > Time </th>\n        <td mat-cell *matCellDef=\"let reservation\"> {{ reservation.time }} </td>\n      </ng-container>\n      <ng-container matColumnDef=\"persons\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Persons </th>\n          <td mat-cell *matCellDef=\"let reservation\"> {{ reservation.persons }} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"number\">\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Number </th>\n            <td mat-cell *matCellDef=\"let reservation\"> {{ reservation.number }} </td>\n          </ng-container>\n          <ng-container matColumnDef=\"specification\">\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Specification </th>\n              <td mat-cell *matCellDef=\"let reservation\"> {{ reservation.specification }} </td>\n            </ng-container>\n    <ng-container id=\"spec\" matColumnDef=\"cancel\">\n      <th mat-header-cell *matHeaderCellDef> Cancel </th>\n      <td mat-cell  id=\"spec\" *matCellDef=\"let reservation\"><button (click)=\"onDeleteR(reservation._id, reservationForm)\" mat-raised-button color=\"warn\">Cancel</button></td>\n\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n  <tr mat-row  *matRowDef=\"let reservation; columns: columns\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\" [pageSize]=\"5\" showFirstLastButtons></mat-paginator>\n\n\n</div>\n<!-- end of reservation table -->\n<br/><br/><br/>\n<br/><br/><br/>\n\n<!-- make a reservation -->\n<div class=\"container\"  id=\"adminreservation\" style=\" background:gray;\">\n    <form #reservationForm=\"ngForm\" (ngSubmit)=\"onSubmitR(reservationForm)\">\n        <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"reservationService.selectedReservation._id\">\n          <mat-form-field>\n              <input [(ngModel)]=\"date\" name=\"date\" matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" required> \n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field>\n                <input [(ngModel)]=\"time\" name=\"time\" matInput placeholder=\"Time\" type=\"time\">\n              </mat-form-field>\n        <mat-form-field>\n          <input [(ngModel)]=\"name\" name=\"name\" matInput placeholder=\"Name\" required>\n        </mat-form-field>\n        <mat-form-field>\n          <input [(ngModel)]=\"persons\" name=\"persons\" matInput placeholder=\"NUmber of persons\" type=\"number\">\n        </mat-form-field>\n        <mat-form-field>\n                <input [(ngModel)]=\"number\" name=\"number\" matInput placeholder=\"Phone number\" type=\"text\">\n              </mat-form-field>\n              <mat-form-field>\n                    <input [(ngModel)]=\"specification\" name=\"specification\" matInput placeholder=\"Any Specification\" type=\"text\">\n                  </mat-form-field>\n        <button mat-raised-button color=\"green\"  type=\"submit\" class=\"btn btn-custom right\" type=\"submit\" [disabled]=\"!reservationForm.valid\">Make Appointment</button>\n                  <div class=\"row\">\n                      <div class=\"input-field col s12\">\n                        <button class=\"btn btn-custom right\" type=\"button\" (click)=\"resetFormR(reservationForm)\">Reset</button>\n                      </div>\n                    </div>\n                  </form>\n                </div>\n\n                <br/><br/><br/>\n                <br/><br/><br/>\n","import { Component, OnInit, Input,ViewChild } from '@angular/core';\nimport {  ViewEncapsulation } from '@angular/core';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { trigger,state,style,transition,animate,keyframes, query, stagger } from '@angular/animations';\n\n\n@Component({\n  selector: 'app-home',\n  encapsulation: ViewEncapsulation.None,\n\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n  animations: [\n    trigger('menuAnimation', [\n      transition('* => *', [\n        query('p', style({transform: 'translateY(-100%)'})),\n        query('p', \n        stagger('1200ms', [\n          animate('1900ms', style({transform: 'translateY(100%)'}))\n        ]))\n      ])\n    ]),\n    trigger('Photo1Animation', [\n      transition('* => *', [\n        query('img', style({transform: 'translateX(-100%)'})),\n        query('img', \n        stagger('1900ms', [\n          animate('1500ms', style({transform: 'translateX(0)'}))\n        ]))\n      ])\n    ]),\n    trigger('Photo2Animation', [\n      transition('* => *', [\n        query('img', style({transform: 'translateY(100%)'})),\n        query('img', \n        stagger('1900ms', [\n          animate('1500ms', style({transform: 'translateY(0)'}))\n        ]))\n      ])\n    ]),\n   \n   ]\n})\nexport class HomeComponent implements OnInit {\n\n  // images = [1, 2, 3].map((n) => `../../../assets/images/${n}.jpg`);\n  \n  menus = [\"Pasta\", \"Meat\", \"Fish\", \"Dessert\", \"Drink\"].map((string) => `${string}`);\n  images = [\"el6\"].map((string) => `../../../assets/images/${string}.png`);\n  images1 = [\"el3\"].map((string) => `../../../assets/images/${string}.png`);\n  images2 = [\"el4\"].map((string) => `../../../assets/images/${string}.png`);\n  images3 = [\"el1\"].map((string) => `../../../assets/images/${string}.png`);\n  p= String;\n  constructor() {  \n  \n  } \n\n\n  ngOnInit() {\n  }\n  getUrl()\n  {\n    return \"url('../../../assets/images/menu.jpg')\";\n  }\n}\n","\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n</head>\n<body>\n<!-- Animation Section -->\n<div class=\"container-fluid\"   style=\"position: fixed;  height: 100vh; left: 0px;background-position: center;    position: absolute;  background-size: cover\">\n    <!-- [ngStyle]=\"{'background-image': getUrl()}\" -->\n  <div class=\"container-fluid\">    \n    <div class=\"row\">\n\n      <div class=\"col\"  [@Photo1Animation]=\"images3.length\" style=\" bottom: -210px; \">\n            <div *ngFor =\"let image of images3\">\n                <img  class=\"w-100\" [src]=\"image\" >\n            </div> \n         </div>\n         <div class=\"col\"  [@Photo2Animation]=\"images2.length\" style=\" bottom: -260px; \">\n            <div *ngFor =\"let image of images2\">\n                <img  class=\"w-100\" [src]=\"image\" >\n            </div> \n         </div>\n         <div class=\"col\"  [@Photo1Animation]=\"images.length\" style=\" bottom: -260px;\">\n            <div *ngFor =\"let image of images\">\n                <img  class=\"w-100\" [src]=\"image\" >\n            </div> \n         </div>\n         <div class=\"col\"  [@Photo2Animation]=\"images1.length\" style=\" bottom: -260px; \">\n            <div *ngFor =\"let image of images1\">\n                <img  class=\"w-100\" [src]=\"image\" >\n            </div> \n         </div>\n    </div> \n    <h1 class=\"text-center\" style=\"color: green; position: relative; bottom: -370px;\">IlGrapolo Restaurant</h1> \n  </div>\n</div>\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\n\n@Component({\n  selector: 'app-loginadmin',\n  templateUrl: './loginadmin.component.html',\n  styleUrls: ['./loginadmin.component.css']\n})\nexport class LoginadminComponent implements OnInit {\n  username: String;\n  password: String;\n\n  constructor(\n    private authService:AuthService,\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onLoginSubmit(){\n    const admin = {\n      username: this.username,\n      password: this.password\n    }\n\n    this.authService.authenticateAdmin(admin).subscribe(data => {\n      if(data.success){\n        this.authService.storeAdminData(data.token, data.admin);\n        this.flashMessage.show('You are now logged in', {\n          cssClass: 'alert-success',\n          timeout: 200});\n        this.router.navigate(['admin']);\n      } else {\n        this.flashMessage.show(data.msg, {\n          cssClass: 'alert-danger',\n          timeout: 3000});\n        this.router.navigate(['login']);\n      }\n    });\n  }\n}\n\n\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\" style=\"position: relative; bottom: -200px;\">\n\n  <div class=\"form-group\" >\n    <label>Username</label>\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n  </div>\n\n  <div class=\"form-group\">\n    <label>Password</label>\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n  </div>\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\">\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { trigger,state,style,transition,animate,keyframes, query, stagger } from '@angular/animations';\nimport { EditMenuService } from '../../services/editmenu.service';\nimport { Router } from '@angular/router';\nimport {  ViewEncapsulation } from '@angular/core';\n\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\n@Component({\n  selector: 'app-menu',\n  encapsulation: ViewEncapsulation.None,\n\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css'],\n  animations: [\n    trigger('menuAnimation', [\n      transition('* => *', [\n        query('div', style({transform: 'translateY(-100%)'})),\n        query('div', \n        stagger('800ms', [\n          animate('1500ms', style({transform: 'translateY(0)'}))\n        ]))\n      ])\n    ]),\n  ]\n})\nexport class MenuComponent implements OnInit {\n  image = [4, 2, 1, 3].map((n) => `../../../assets/images/${n}.jpg`);\n\n\n  images = [1,2,1,1,1,1,1,1].map((n) => `../../../assets/images/${n}.jpg`);\n  imagesP = [2,2,2,2,2,2,2,2].map((n) => `../../../assets/images/${n}.jpg`);\n  imagesD = [2,2,2,2,2,2,2,2].map((n) => `../../../assets/images/${n}.jpg`);\n  imagesDr = [2,2,2,2,2,2,2,2].map((n) => `../../../assets/images/${n}.jpg`);\n  imagesF= [2,2,1,1,1,2,2,2].map((n) => `../../../assets/images/${n}.jpg`);\n\n  p= String;\n  pastas: any = [];\n  meat: any =[];\n  fish: any =[];\n  dessert: any =[];\n  drink: any =[];\n  ditore: any=[];\n  slides: any = [[]];\n  chunk(arr: any, chunkSize:any) {\n    for (let i = 0, len = arr.length; i < len; i += chunkSize) {\n      this.images.push(arr.slice(i, i + chunkSize));\n    }\n    return this.images;\n  }\n\n  constructor(private editmenuService:EditMenuService, private router:Router) { }\n\n  ngOnInit() {\n\n    //Dispaly Meny Ditore\n    this.editmenuService.getDitore().subscribe(allmenu=> {\n      this.ditore = allmenu;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n    //Display Pasta\n    this.editmenuService.getPasta().subscribe(allpastas=> {\n      this.pastas = allpastas;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n    //Display Meat\n    this.editmenuService.getMeat().subscribe(allmeat => {\n      this.meat = allmeat;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n     //Display Fish\n     this.editmenuService.getFish().subscribe(allfish => {\n      this.fish = allfish;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n     //Display Dessert\n     this.editmenuService.getDessert().subscribe(alldessert => {\n      this.dessert = alldessert;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n\n     //Display Drink\n     this.editmenuService.getDrink().subscribe(alldrinks => {\n      this.drink = alldrinks;\n    },\n     err => {\n       console.log(err);\n       return false;\n     });\n     \n  }\n  getUrl()\n  {\n    return \"url('../../../assets/images/menu1.jpg')\";\n  }\n\n\n}\n","<html>\n    <head>\n\n    </head>\n    <body>\n        <!-- <nav class=\"navbar navbar-expand-md navbar-light bg-light sticky-top\" style=\"position: fixed;\">\n            <div class=\"container-fluid\">\n                <a class=\"navbar-brand\" href=\"#\"><img src=\"../../../assets/images/logo.png\"></a>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"navbarResponsive\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n                    <ul class=\"navbar-nav ml-auto\">\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link active\">Home</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" >Home</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\" >Home</a>\n                        </li>\n                        <li class=\"nav-item\">\n                            <a class=\"nav-link\">Home</a>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </nav> -->\n\n<div class=\"container-fluid\"  style=\" height: 100vh; left: 0px;   position: absolute;  background: white;\">\n\n\n    <div class=\"jumbotron\" style=\"background: white;\">\n        <figure class=\" team \" style=\"background: white; position: relative;\" >\n                <img  class=\"w-100\" src=\"../../../assets/images/menu.jpg\" style=\"height: 50vh;\" >\n                <br/><br/><br/><br/>\n                <figcaption >\n                    <div style=\"position: absolute; ; top: 35%; left: 45%; color: white;\">\n                        <div class=\"container\" id=\"menuan\" style=\"font-size: 200%\" >\n                            <div class=beautiful id=BE>M</div>\n                            <div class=beautiful  id=A>E</div>\n                            <div class=beautiful  id=U>N</div>\n                            <div class=beautiful  id=TIFUL>U</div>\n                          </div> \n                                 </div>\n        \n                    </figcaption>\n        </figure> \n    \n        <!-- Ditore menu -->\n            <h1  class=\"text-center\" style=\"font-size: 200%;\">Menu Ditore</h1><br/><br/>\n                  <div class=\"container-fluid row row-cols-4 text-center\" [@menuAnimation]=\"ditore.length\" >\n                <div class=\"col card card-body text-center\" *ngFor =\"let dite of ditore\">\n                        <h3 style=\"font-size: 150%;\">{{dite.food}}</h3>\n\n                    <p class=\"p-4\" style=\"font-style: italic;\">{{dite.description}}</p>\n            </div>\n        </div>\n\n      </div>\n\n        <!-- Photos section -->\n        <div class=\" container-fluid\">\n        <br/><br/><br/><br/>\n        <!-- Buttons -->\n          <div class=\"buttons container-fluid text-center\" style=\"font-size: 200%; font-style: italic;\" > \n                <div class=\"row\">\n                        <input type=\"hidden\" #selection>\n                                     \n                    <div class=\"col-sm-2\">\n                        <p (click)=\"selection.value = 'meat'\">Meat</p>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <p (click)=\"selection.value = 'fish'\">Fish</p>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <p (click)=\"selection.value = 'dessert'\">Dessert</p>\n                    </div>\n                    <div class=\"col-sm-2\">\n                        <p (click)=\"selection.value = 'drink'\">Drink</p>\n                    </div>\n                    <div class=\"col-sm-2\">\n                            <p (click)=\"selection.value = 'pasta'\">Pasta</p>\n                        </div>\n                </div>\n            </div>\n            <!-- end of buttons -->\n            <br/>\n            \n        \n          <div class=\"mt-2 mb-5\"  [ngSwitch]=\"selection.value\" >\n            <div class=\" row row-cols-4 \" *ngSwitchDefault>\n              <div class=\"col card card-body text-center\" *ngFor=\"let image of images\" >\n                 <a  class=\"d-block mb-6 h-100\">\n                    <img class=\"img-fluid img-thumbnail\" [src]=\"image\" alt=\"\">\n                  </a>\n              </div>\n            </div>\n        \n\n           <div class=\" row row-cols-4 \" *ngSwitchCase=\"'pasta'\">\n            <div class=\"col card card-body text-center\" *ngFor=\"let image of imagesP\">\n              <a href=\"../../../assets/images/menu1.jpg\" class=\"d-block mb-6 h-100\">\n                    <img class=\"img-fluid img-thumbnail\" [src]=\"image\" alt=\"\">\n               </a>\n             </div>\n            </div>\n            <div class=\" row row-cols-4 \" *ngSwitchCase=\"'fish'\">\n                <div class=\"col card card-body text-center\" *ngFor=\"let image of imagesF\">\n                  <a href=\"../../../assets/images/menu1.jpg\" class=\"d-block mb-6 h-100\">\n                        <img class=\"img-fluid img-thumbnail\" [src]=\"image\" alt=\"\">\n                   </a>\n                 </div>\n                </div>\n                <div class=\" row row-cols-4 \" *ngSwitchCase=\"'drink'\">\n                    <div class=\"col card card-body text-center\" *ngFor=\"let image of imagesDr\">\n                      <a href=\"../../../assets/images/menu1.jpg\" class=\"d-block mb-6 h-100\">\n                            <img class=\"img-fluid img-thumbnail\" [src]=\"image\" alt=\"\">\n                       </a>\n                     </div>\n                    </div>\n                    <div class=\" row row-cols-4 \" *ngSwitchCase=\"'dessert'\">\n                        <div class=\"col card card-body text-center\" *ngFor=\"let image of imagesD\">\n                          <a href=\"../../../assets/images/menu1.jpg\" class=\"d-block mb-6 h-100\">\n                                <img class=\"img-fluid img-thumbnail\" [src]=\"image\" alt=\"\">\n                           </a>\n                         </div>\n                        </div>\n                      </div>\n                    </div>\n                    <!-- end of photos section -->\n                    <br/><br/><br/>\n\n\n            <!-- mene section -->\n          <h1 class=\"text-center\" style=\"font-size: 250% ;\">Pasta</h1><br/>\n          <div class=\"container\">\n          <div class=\" row row-cols-3 text-center\"> \n                <div  class=\"col  text-center\" *ngFor =\"let pasta of pastas\">\n                   <h2>{{pasta.pasta}}</h2>\n                    <p style=\"font-style: italic;\">{{pasta.descriptionp}}</p>\n                </div>\n                </div>\n\n          </div>\n          <br/><br/><br/>\n\n          <h1 class=\"text-center\" style=\"font-size: 250% ;\">Meat</h1><br/>\n          <div class=\"container\">\n          <div class=\" row row-cols-3 text-center\"> \n                <div  class=\"col  text-center\" *ngFor =\"let meat of meat\">\n                   <h2>{{meat.meat}}</h2>\n                    <p style=\"font-style: italic;\" >{{meat.descriptionm}}</p>\n                </div>\n              </div>\n          </div>\n          <br/><br/><br/>\n\n\n          <h1 class=\"text-center\" style=\"font-size: 250% ;\">Fish</h1><br/>\n          <div class=\"container\">\n          <div class=\" row row-cols-3 text-center\"> \n                <div  class=\"col  text-center\" *ngFor =\"let fish of fish\">\n                   <h2>{{fish.fish}}</h2>\n                    <p style=\"font-style: italic;\" >{{fish.descriptionf}}</p>\n                </div>\n              </div>\n          </div> \n          <br/><br/><br/>\n\n          <h1 class=\"text-center\" style=\"font-size: 250% ;\">Dessert</h1><br/>\n          <div class=\"container\">\n          <div class=\" row row-cols-3 text-center\"> \n                <div  class=\"col text-center\" *ngFor =\"let dess of dessert\">\n                   <h2>{{dess.dessert}}</h2>\n                    <p style=\"font-style: italic;\">{{dess.descriptiond}}</p>\n                </div>\n              </div>\n          </div>\n          <br/><br/><br/>\n\n          <h1 class=\"text-center\" style=\"font-size: 250% ;\">Drink</h1><br/>\n          <div class=\"container\">\n          <div class=\" row row-cols-3 text-center\"> \n                <div  class=\"col text-center\" *ngFor =\"let drink of drink\">\n                   <h2>{{drink.drink}}</h2>\n                    <p style=\"font-style: italic;\">{{drink.descriptiondr}}</p>\n                </div>\n          </div>\n        </div>\n          <!-- end of menu section -->\n\n          <br/><br/><br/>\n          <br/><br/><br/>\n       \n\n          <footer>\n              <div class=\"container-fluid padding\">\n                  <div class=\" row text-center\">\n          <div class=\"col-md-4\">\n                  <img src=\"../../../assets/images/w3newbie.png\">\n              <hr class=\"light\">\n              <p>+355675550387</p>\n              <p>anxhina.gjoni@live.com</p>\n              <p>100 Aleksandri i Madh</p>\n              <p>Tirane, Albania</p>\n          \n          </div>\n          \n          <div class=\"col-md-4\">\n                  <hr class=\"light\">\n              <h5>Our hours</h5>\n              <hr class=\"light\">\n              <p>Monday: 9am-5pm</p>\n              <p>Saturday: 10am - 4pm</p>\n              <P>Sanday: closed</P>\n               \n              </div>\n          \n              <div class=\"col-md-4\">\n                      <hr class=\"light\">\n                  <h5>Location</h5>\n                  <hr class=\"light\">\n                  <p>Monday: 9am-5pm</p>\n                  <p>Saturday: 10am - 4pm</p>\n                  <P>Sanday: closed</P>\n                   \n                  </div>\n          \n          <div class=\"col-12\">\n              <hr class=\"light-100\">\n              <h5>&copy; proka.com</h5>\n          </div>\n                  </div>\n              </div>\n          </footer>\n        </div>\n      </body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { faTwitter, faFacebook, faInstagram, faSlack } from '@fortawesome/free-brands-svg-icons';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  public collapse= false;\n  faTwitter = faTwitter;\n  faFacebook=faFacebook;\n  faInstagram=faInstagram;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  \n\n}\n","<!-- <html>\n    <head>\n\n    </head>\n    <body>\n        <nav  class=\"navbar navbar-expand-sm fixed-top \" style=\"position: absolute;  right: 200px;\">\n            <button class=\"navbar-toggler\"  (click)=\"collapse=!collapse\" type=\"button\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <span class=\"navbar-toggler-icon\" style=\"background: orange\"></span>\n            </button>\n          \n            <div  class=\"navbar-collapse\" (click)=\"collapse=true\" [hidden]=\"collapse\">\n              <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\"  style=\"color: green;\">\n                  <a class=\"nav-link\" style=\"font-size:1.5vw; color: green;\" >Home <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" style=\"font-size:1.5vw; color: green;\" [routerLink]=\"['/menu']\">Menu <span class=\"sr-only\">(current)</span></a>\n                  </li>\n\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" style=\"font-size:1.5vw; color: green;\" [routerLink]=\"['/reservation']\">Reservation <span class=\"sr-only\">(current)</span></a>\n                  </li>\n\n           \n\n                <li class=\"nav-item\">\n                    <a id=\"twitter\"style=\"font-size:1vw; color:green;\" href=\"https://twitter.com/stephanieizard\" target=\"_blank\"><fa-icon [icon]=\"faTwitter\"></fa-icon></a>\n                  </li>\n                  <li class=\"nav-item\">\n                      <a id=\"facebook\" style=\"font-size:1vw; color: green;\"  href=\"https://www.facebook.com/girlandthegoat\" target=\"_blank\"><fa-icon [icon]=\"faFacebook\"></fa-icon></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"instagram\"  style=\"font-size:1vw; color: green;\" href=\"https://instagram.com/stephanieizard/\" target=\"_blank\"><fa-icon [icon]=\"faInstagram\"></fa-icon></a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a  id=\"admin\" style=\"font-size:1vw; color: green;\"  target=\"_blank\" [routerLink]=\"['/login']\">     Admin</a>\n                        </li>\n              </ul>\n            </div>\n          </nav>\n    </body>\n</html> -->\n\n\n\n\n<nav class=\"navbar navbar-expand-md navbar-light bg-light sticky-top text-center\" style=\"position: fixed;\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\"><img src=\"../../../assets/images/logo.png\"></a>\n        <button class=\"navbar-toggler\"  (click)=\"collapse=!collapse\" type=\"button\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\" style=\"background: orange\"></span>\n          </button>\n          <div  class=\"navbar-collapse\" (click)=\"collapse=true\" [hidden]=\"collapse\">\n              <ul class=\"navbar-nav ml-auto\">\n                <li class=\"nav-item\"  style=\"color: green;\">\n                  <a class=\"nav-link\" style=\"font-size:1.5vw; \"[routerLink]=\"['/']\" >Home <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" style=\"font-size:1.5vw; \" [routerLink]=\"['/menu']\">Menu <span class=\"sr-only\">(current)</span></a>\n                  </li>\n\n                  <li class=\"nav-item\">\n                    <a class=\"nav-link\" style=\"font-size:1.5vw;\" [routerLink]=\"['/reservation']\">Reservation <span class=\"sr-only\">(current)</span></a>\n                  </li>\n\n           \n\n                <!-- <li class=\"nav-item\">\n                    <a id=\"twitter\"style=\"font-size:1vw; color:green;\" href=\"https://twitter.com/stephanieizard\" target=\"_blank\"><fa-icon [icon]=\"faTwitter\"></fa-icon></a>\n                  </li>\n                  <li class=\"nav-item\">\n                      <a id=\"facebook\" style=\"font-size:1vw; color: green;\"  href=\"https://www.facebook.com/girlandthegoat\" target=\"_blank\"><fa-icon [icon]=\"faFacebook\"></fa-icon></a>\n                    </li>\n                    <li class=\"nav-item\">\n                        <a id=\"instagram\"  style=\"font-size:1vw; color: green;\" href=\"https://instagram.com/stephanieizard/\" target=\"_blank\"><fa-icon [icon]=\"faInstagram\"></fa-icon></a>\n                      </li> -->\n                      <!-- <li class=\"nav-item\">\n                          <a  id=\"admin\" style=\"font-size:1vw; color: green;\"  target=\"_blank\" [routerLink]=\"['/login']\">     Admin</a>\n                        </li> -->\n              </ul>\n        </div>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {ReservationService } from '../../services/reservation.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { NgForm }   from '@angular/forms';\nimport { Reservation } from 'src/app/services/reservationmodel';\nimport {ValidateService} from '../../services/validate.service'\nimport { Response } from '@angular/http';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {  ViewEncapsulation } from '@angular/core';\n@Component({\n  selector: 'app-reservation',\n  encapsulation: ViewEncapsulation.None,\n\n  templateUrl: './reservation.component.html',\n  styleUrls: ['./reservation.component.css']\n})\nexport class ReservationComponent implements OnInit {\n  _id: string;\n  date: string;\n  time: string;\n  name: string;\n  number: string;\n  specification: string\n  persons: string;\n  reservations: MatTableDataSource<any>;\n\n  constructor(public reservationService: ReservationService,\n    private validateService: ValidateService,\n\n    private router:Router,\n    private flashMessage:FlashMessagesService\n  ) { }\n\n  ngOnInit(): void {\n    this.resetFormRe();\n    this.refreshReservationList();\n\n  }\n\n\n  resetFormRe(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.reservationService.selectedReservation = {\n      _id: \"\",\n      name: \"\",\n      date: \"\",\n      time: \"\",\n      specification: \"\",\n      number: \"\",\n      persons: \"\"\n    }\n  }\n  \n  refreshReservationList() {\n    this.reservationService.getReservation()\n    .subscribe(allmenu=> {\n      this.reservations = allmenu;\n      this.reservations = new MatTableDataSource(allmenu);\n      this.refreshReservationList();\n\n   \n    \n    \n    \n    },\n    \n     err => {\n       console.log(err);\n       return false;\n     });\n    }\n\n    // Register reservation from client\n  onRegisterSubmit(form: NgForm){\n    const reservation = {\n      _id: this._id,\n      name: this.name,\n      time: this.time,\n      date: this.date,\n      persons: this.persons,\n      specification: this.specification,\n      number: this.number\n    }\n\n    if(!this.validateService.validateReservation(reservation)){\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\n      return false;\n    }\n    this.reservationService.postReservation(form.value).subscribe((data) => {\n      const date = new Date(data.date).toDateString();\n      this.resetFormRe(form);\n      this.flashMessage.show('Reservation register', {cssClass: 'alert-success', timeout: 3000});\n\n\n      // if(data.success){\n      //   this.resetFormRe();\n\n      //   this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\n      //   this.router.navigate(['/reservation']);\n      // } else {\n      //   this.router.navigate(['/reservation']);\n      // }\n    });\n  \n}\n\n\n}\n","\n<div class=\"container-fluid\"  style=\" height: 100vh; left: 0px;   position: absolute;  background: white;\">\n  <figure class=\" team \" style=\"background: white; position: relative;\" >\n     <img  class=\"w-100\" src=\"../../../assets/images/reservation.jpg\" style=\"height: 60vh;\" >\n     <br/><br/><br/><br/>\n     <figcaption >\n       <div style=\"position: absolute; ; top: 35%; color: white;\">\n        <div class=\"container\" id=\"container\" style=\"font-size: 100%\" >\n          <div class=beautiful id=BE>ResE</div>\n          <div class=beautiful  id=A>rva</div>\n          <div class=beautiful  id=U>T</div>\n          <div class=beautiful  id=TIFUL>ioN</div>\n        </div>\n      </div>\n    </figcaption>\n  </figure> \n     \n\n<div class=\"container\">\n  <div class=\"text-center\" >\n    <h1 style=\"font-size: 300%;\">Make a Reservation</h1>\n  </div>\n</div>\n\n<br/><br/><br/>\n<br/><br/><br/>\n\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1 style=\"font-size: 200%;\"><b>By Phone</b></h1>\n      <p >Prefer to make your reservation via phone?\n          Call (347) 555-1234 between 10am and noon.</p>\n    </div>\n    <div class=\"col\">\n        <h1 style=\"font-size: 200%;\"><b>SPECIAL EVENTS & PRIVATE PARTIES\n          </b></h1>\n          <p >Catering and Events are opportunities for us to work more closely with our guests, occasions for us to share our dedication to celebration in exciting new ways.</p>      </div>\n        </div>\n      </div>\n\n\n\n<br/><br/><br/>\n<br/><br/><br/>\n\n\n<div class=\"container text-center\">\n  <h1 style=\"font-size: 200%;\"><b>Or Reserve Here</b></h1>\n</div>\n<br/>\n    <div class=\"container\" id=\"reservation\"  style=\"  background:#f5f0f0;  \">\n      <form #rForm=\"ngForm\" (ngSubmit)=\"onRegisterSubmit(rForm)\" class=\"text-center\">\n          <input type=\"hidden\" name=\"_id\" #_id=\"ngModel\" [(ngModel)]=\"reservationService.selectedReservation._id\">\n            <mat-form-field>\n                <input [(ngModel)]=\"date\" name=\"date\" matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\" required>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n              <mat-form-field >\n                  <input [(ngModel)]=\"time\" name=\"time\" matInput placeholder=\"Time\" type=\"time\">\n                </mat-form-field>\n          <mat-form-field color=\"white\">\n            <input [(ngModel)]=\"name\" name=\"name\" matInput placeholder=\"Name\" required >\n          </mat-form-field>\n          <mat-form-field>\n            <input [(ngModel)]=\"persons\" name=\"persons\" matInput placeholder=\"Number of Guests \" type=\"number\">\n          </mat-form-field>\n          <mat-form-field>\n                  <input [(ngModel)]=\"number\" name=\"number\" matInput placeholder=\"Phone number\" type=\"text\">\n                </mat-form-field>\n                <mat-form-field>\n                      <textarea rows=\"5\" cols=\"40\" [(ngModel)]=\"specification\" name=\"specification\" matInput placeholder=\"Comments\" type=\"text\"> </textarea>\n                    </mat-form-field>\n          <button mat-raised-button color=\"green\">Make Appointment</button>\n                    <div class=\"row\">\n                        <div class=\"input-field col s12\">\n                          <button class=\"btn btn-custom right\" type=\"button\" style=\"color: white;\" (click)=\"resetFormRe(rForm)\">Reset</button>\n                        </div>\n                      </div>\n                    </form>\n                  </div> \n<br/><br/><br/>\n<br/><br/><br/>\n<br/><br/><br/>\n<footer>\n    <div class=\"container-fluid padding\">\n      <div class=\" row text-center\">\n<div class=\"col-md-4\">\n  <img src=\"../../../assets/images/w3newbie.png\">\n    <hr class=\"light\">\n    <p>+355675550387</p>\n    <p>anxhina.gjoni@live.com</p>\n    <p>100 Aleksandri i Madh</p>\n    <p>Tirane, Albania</p>\n  </div>\n\n<div class=\"col-md-4\">\n  <hr class=\"light\">\n    <h5>Our hours</h5>\n    <hr class=\"light\">\n    <p>Monday: 9am-5pm</p>\n    <p>Saturday: 10am - 4pm</p>\n    <P>Sanday: closed</P>\n  </div>\n  <div class=\"col-md-4\">\n    <hr class=\"light\">\n    <h5>Location</h5>\n    <hr class=\"light\">\n    <p>Monday: 9am-5pm</p>\n    <p>Saturday: 10am - 4pm</p>\n    <P>Sanday: closed</P>\n  </div>\n\n<div class=\"col-12\">\n    <hr class=\"light-100\">\n    <h5>&copy; proka.com</h5>\n</div>\n</div>\n</div>\n</footer>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: '24/09/2020,', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div style=\"position: relative; bottom: -200px;\">\n<mat-form-field >\n        <mat-label>Filter</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. ium\">\n      </mat-form-field>\n      \n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      \n        <!-- Position Column -->\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n        </ng-container>\n      \n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Name </th>\n          <td mat-cell *matCellDef=\"let el\"> {{el.name}} </td>\n        </ng-container>\n      \n        <!-- Weight Column -->\n        <ng-container matColumnDef=\"weight\">\n          <th mat-header-cell *matHeaderCellDef> Weight </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.weight}} </td>\n        </ng-container>\n      \n        <!-- Symbol Column -->\n        <ng-container matColumnDef=\"symbol\">\n          <th mat-header-cell *matHeaderCellDef> Symbol </th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n        </ng-container>\n      \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { NgbCarousel, NgbSlideEvent, NgbSlideEventSource } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbCarouselConfig } from '@ng-bootstrap/ng-bootstrap';\nimport {  ViewEncapsulation } from '@angular/core';\nimport { Reservation } from 'src/app/services/reservationmodel';\nimport {ValidateService} from '../../services/validate.service'\nimport {ReservationService } from '../../services/reservation.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { NgForm }   from '@angular/forms';\nimport { trigger,state,style,transition,animate,keyframes, query, stagger } from '@angular/animations';\n\n@Component({\n  selector: 'app-testh',\n  encapsulation: ViewEncapsulation.None,\n\n  templateUrl: './testh.component.html',\n  styleUrls: ['./testh.component.css'],\n  animations: [\n    trigger('menuAnimation', [\n      transition('* => *', [\n        query('div', style({transform: 'translateY(-150%)'})),\n        query('div', \n        stagger('800ms', [\n          animate('1500ms', style({transform: 'translateY(0)'}))\n        ]))\n      ])\n    ]),\n  ]\n})\nexport class TesthComponent implements OnInit {\n  image = [\"background\",\"background1\", \"background1\"].map((n) => `../../../assets/images/${n}.png`);\n  images = [\"food\",\"food1\", \"food2\", \"food3\"].map((n) => `../../../assets/images/${n}.jpg`);\n  public show:boolean = false;\n  public buttonName:any = 'Show';\nusername: string;\n_id: string\nrev: string;\nreviews: any=[];\n\n  public review:boolean = false;\n  public button:any = 'Show';\n  constructor(public reservationService: ReservationService,\n    private validateService: ValidateService,\n\n    private flashMessage:FlashMessagesService\n  ) { }\n  ngOnInit(): void {\n    this.resetFormRev();\n    this.refreshReviewsList();\n  }\n\n  toggle() {\n    this.show = !this.show;\n\n    // CHANGE THE NAME OF THE BUTTON.\n    if(this.show)  \n      this.buttonName = \"Hide\";\n    else\n      this.buttonName = \"Show\";\n  }\n\n  toggleR() {\n    this.review = !this.review;\n\n    // CHANGE THE NAME OF THE BUTTON.\n    if(this.review)  \n      this.button = \"Hide\";\n    else\n      this.button = \"Show\";\n  }\n\n\n\n  resetFormRev(form?: NgForm) {\n    if (form)\n      form.reset();\n    this.reservationService.selectedReview = {\n      _id: \"\",\n      username: \"\",\n      rev: \"\",\n  \n    }\n  }\n  \n  onSubmitRev(form: NgForm) {\n  \n      this.reservationService.postReview(form.value).subscribe((res) => {\n        this.resetFormRev(form);\n  \n          this.refreshReviewsList();\n  \n    \n      });\n   \n  \n    \n  }\n  \n  refreshReviewsList() {\n  this.reservationService.getReview()\n  .subscribe(allmenu=> {\n    this.reviews = allmenu;\n  \n  },\n  \n   err => {\n     console.log(err);\n     return false;\n   });\n  }\n  \n\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset = \"UTF-8\" />\n\n\n\n</head>\n\n<div class=\"container-fluid\"  style=\" height: 100vh; left: 0px;   position: absolute;  background: white;\">\n\n<div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n        <ngb-carousel *ngIf=\"image\">\n           \n            <ng-template ngbSlide *ngFor=\"let imag of image\" >\n                <div  >\n                    <img  class=\"w-100\" [src]=\"imag\" style=\"height: 90vh; \" >\n               \n                </div>\n              \n              </ng-template>\n        </ngb-carousel>    \n        <div style=\"position: absolute; ; top: 35%; color: white;\">\n                <div class=\"container \" id=\"container\">\n                        <div class=beautiful id=BE>Res</div>\n                        <div class=beautiful  id=A>T</div>\n                        <div class=beautiful  id=U>Au</div>\n                        <div class=beautiful  id=TIFUL>RANT</div>\n                      </div>\n        </div>\n    </div>\n \n</div>\n\n\n\n<br/><br/><br/><br/><br/><br/>\n\n\n<br/><br/><br/><br/><br/><br/>\n\n    <div class=\"row text-center padding foto\">\n            <div class=\"col-xs-12 col-sm-6 col-md-3\"  *ngFor=\"let image of images\" >    \n         <div class=\"elementor-image-box-wrapper\"><figure class=\"elementor-image-box-img\"><img width=\"400\" height=\"300\" [src]=\"image\" class=\"attachment-full size-full\" alt=\"\" /></figure>\t</div>\n      </div>\n    </div>\n     <br/><br/><br/><br/><br/><br/>\n \n            <br/><br/><br/>\n            <br/><br/><br/>\n\n<div class=\"jumbotron\" style=\"background: white;\">\n<figure class=\" team \" style=\"background: white; position: relative;\" >\n    <img  class=\"w-100\" src=\"../../../assets/images/team.jpg\" style=\"height: 80vh;\" >\n        <br/><br/><br/><br/>\n        <figcaption >\n            <div style=\"position: absolute; top: 50%; left: 30%; color: white;\">\n            <h1 >Our Team</h1>\n        </div>\n    </figcaption>\n</figure> \n\n\n<section id=\"team-basil\" class=\"Index-page\"  data-collection-id=\"58b606edebbd1a10e586acf9\" data-parallax-id=\"58b606edebbd1a10e586acf9\" data-edit-main-image=\"Background\">\n        \n        <div class=\"Index-page-content \">\n          <div class=\"sqs-layout sqs-grid-12 columns-12\" data-type=\"page\" data-updated-on=\"1488405448204\" id=\"page-58b606edebbd1a10e586acf9\"><div class=\"row sqs-row\"><div class=\"col sqs-col-4 span-4\"><div class=\"sqs-block html-block sqs-block-html\" data-block-type=\"2\" id=\"block-8b3071a983d0a4d28ba0\"><div class=\"sqs-block-content\"><h2 style=\"font-size: 200%;   text-shadow: 1px 1px 10px #000;\n            \">LIZ GRISAITIS</h2><p style=\"font-size:150%\">EXECUTIVE CHEF</p><p style=\"font-style: italic;\"> Nullam quis risus eget urna mollis ornare vel eu leo. Curabitur blandit tempus porttitor. Curabitur blandit tempus porttitor. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p></div></div></div><div class=\"col sqs-col-4 span-4\"><div class=\"sqs-block html-block sqs-block-html\" data-block-type=\"2\" id=\"block-yui_3_17_2_19_1488316984327_7821\"><div class=\"sqs-block-content\"><h2   style=\" font-size:200%; text-shadow: 1px 1px 10px #000;\"\n>MATTEO CAPON</h2><p style=\"font-size: 150%;\">CHEF DE CUISINE</p><p style=\"font-style: italic;\">Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Sed posuere consectetur est at lobortis. Maecenas sed diam eget risus varius blandit sit amet non magna. Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque.</p></div></div></div><div class=\"col sqs-col-4 span-4\"><div class=\"sqs-block html-block sqs-block-html\" data-block-type=\"2\" id=\"block-yui_3_17_2_19_1488316984327_10428\"><div class=\"sqs-block-content\"><h2 style=\" font-size:200%; text-shadow: 1px 1px 10px #000;\n    \">ANGIE WALSH</h2><p style=\"font-size: 150%;\">PASTRY CHEF</p><p style=\"font-style: italic;\">Cras justo odio, dapibus ac facilisis in, egestas eget quam. Maecenas faucibus mollis interdum. Donec ullamcorper nulla non metus auctor fringilla. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor. Cum sociis natoque penatibus et magnis.</p></div></div></div></div><div class=\"row sqs-row\"><div class=\"col sqs-col-12 span-12\"><div class=\"sqs-block spacer-block sqs-block-spacer\" data-aspect-ratio=\"0.11764705882352941\" data-block-type=\"21\" id=\"block-yui_3_17_2_19_1488316984327_20147\"><div class=\"sqs-block-content\">&nbsp;</div></div><div class=\"sqs-block gallery-block sqs-block-gallery\" data-block-json=\"&#123;&quot;hSize&quot;:null,&quot;floatDir&quot;:null,&quot;methodOption&quot;:&quot;transient&quot;,&quot;existingGallery&quot;:null,&quot;show-meta-only-title&quot;:false,&quot;newWindow&quot;:false,&quot;design&quot;:&quot;grid&quot;,&quot;aspectRatio&quot;:null,&quot;auto-crop&quot;:true,&quot;square-thumbs&quot;:true,&quot;aspect-ratio&quot;:&quot;standard&quot;,&quot;show-meta&quot;:true,&quot;thumbnails-per-row&quot;:2,&quot;padding&quot;:24,&quot;lightbox&quot;:false,&quot;collectionId&quot;:&quot;58b6082c5016e1efa0c21579&quot;,&quot;vSize&quot;:null,&quot;transientGalleryId&quot;:&quot;58b6082c5016e1efa0c21579&quot;&#125;\" data-block-type=\"8\" id=\"block-yui_3_17_2_19_1488316984327_21018\"><div class=\"sqs-block-content\">\n\n</div></div></div></div></div>\n        </div>\n     </section>\n    </div>\n      <br/><br/><br/>\n      <br/><br/><br/>\n      <div class=\"col\">\n        <div class=\"review jumbotron text-center\" id=\"post\" style=\"background: black; \">\n             <ngb-carousel >\n                 <ng-template class=\"container-fluid card col-xs-12 col-sm-12 col-md-3 col-lg-3 col-xl-2\" style=\"background: black;\" ngbSlide *ngFor=\"let imag of reviews\" style=\"background: green; position: absolute;\" >\n                <div class=\"card-deck\">\n                        <div class=\"card \" style=\"background: white;\">\n                          <div class=\"card-body text-center\" >\n                                <h1 class=\"card-text\" style=\"font-size: 200%; color: black; \">{{imag.username}}</h1>\n                                <p class=\"card-text\" style=\"font-size: 150%; font-style: italic; color: black;\"  > {{imag.rev}} </p>\n                            </div>\n                        </div>\n                    </div>\n                </ng-template>\n            </ngb-carousel>  \n        </div>\n    </div>\n    <br/><br/><br/>\n    <br/><br/><br/>\n    \n      <div class=\"container-fluid padding\">\n            <div class=\"row text-center padding\" >\n                <div class=\"col-12 social padding\">\n                    <a href=\"#\"><i class=\"fab fa-facebook\"></i></a>\n                    <a href=\"#\"><i class=\"fab fa-twitter\"></i></a>\n                    <a href=\"#\"><i class=\"fab fa-instagram\"></i></a>\n                    <a href=\"#\"><i class=\"fab fa-google-plus-g\"></i></a>\n                </div>\n            </div>\n        </div>\n        <br/><br/><br/>\n        <br/><br/><br/>\n<footer>\n    <div class=\"container-fluid padding\">\n        <div class=\" row text-center\">\n<div class=\"col-md-4\">\n        <img src=\"../../../assets/images/w3newbie.png\">\n    <hr class=\"light\">\n    <p>+355675550387</p>\n    <p>anxhina.gjoni@live.com</p>\n    <p>100 Aleksandri i Madh</p>\n    <p>Tirane, Albania</p>\n\n</div>\n\n<div class=\"col-md-4\">\n        <hr class=\"light\">\n    <h5>Our hours</h5>\n    <hr class=\"light\">\n    <p>Monday: 9am-5pm</p>\n    <p>Saturday: 10am - 4pm</p>\n    <P>Sanday: closed</P>\n     \n    </div>\n\n    <div class=\"col-md-4\">\n            <hr class=\"light\">\n        <h5>Location</h5>\n        <hr class=\"light\">\n        <p>Monday: 9am-5pm</p>\n        <p>Saturday: 10am - 4pm</p>\n        <P>Sanday: closed</P>\n         \n        </div>\n\n<div class=\"col-12\">\n    <hr class=\"light-100\">\n    <h5 [routerLink]=\"['/login']\">&copy; proka.com</h5>\n</div>\n        </div>\n    </div>\n</footer>\n<div id=\"afc_sidebar_697\" ><a label=\"Click\" (click)=\"toggle()\" ><img src=\"../../../assets/images/icon.jpg\"></a><br/><br/>\n    <div  *ngIf=\"show\" class=\"row\" >\n        <div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 col-xl-2\">\n            <a  [routerLink]=\"['/reservation']\"  id=\"hide\" class=\"btn btn-outline-secondary btn-lg\">Make a Reservation</a>\n            <a [routerLink]=\"['/menu']\" id=\"hide\" class=\"btn btn-outline-secondary btn-lg\">Show Menu</a>\n        </div>\n    </div>\n</div>\n\n<div id=\"review\" ><a style=\"color: black;\" label=\"Click\" (click)=\"toggleR()\"  class=\"mr-2\"><i class=\"fas fa-4x fa-envelope\"></i></a><br/><br/>\n    <div  *ngIf=\"review\" class=\"row\" >\n<div class=\"col-xs-12 col-sm-12 col-md-3 col-lg-3 col-xl-2\">\n    <form  class=\"form-style-4\" #revForm=\"ngForm\" (submit)=\"onSubmitRev(revForm)\" style=\"background-color: black;\">\n        <h1>Let a review</h1>\n                <label for=\"username\">\n                <span>Enter Your Name</span><input type=\"text\" [(ngModel)]=\"username\" name=\"username\" required=\"true\" />\n                </label>\n                <label for=\"rev\">\n                <span>Short Subject</span><input type=\"text\" [(ngModel)]=\"rev\" name=\"rev\" required=\"true\" />\n                </label>\n                <label>\n                <span> </span><input type=\"submit\" value=\"Send Review\"/>\n                </label>\n            </form>\n        </div>\n        </div>\n    </div>\n</div>\n\n </html>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  constructor (private authService:AuthService, private router:Router){\n\n  }\n\n  canActivate() {\n    if(this.authService.loggedIn()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { Admin } from 'src/app/services/menumodel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  selectedAdmin: Admin;\n\n  authToken: any;\n  admin: any;\n  options;\n  readonly baseURL = 'users';\n\n  constructor(private http:Http) { }\n\n\nauthenticateAdmin(admin){\n  let headers = new Headers();\n  headers.append('Content-Type','application/json');\n  return this.http.post('users/authenticate', admin,{headers: headers})\n  .pipe(map((response: any) => response.json()));\n}\n\n\n\nstoreAdminData(token, admin){\n  localStorage.setItem('id_token', token);\n  localStorage.setItem('admin', JSON.stringify(admin));\n  this.authToken = token;\n  this.admin = admin;\n}\n\nloadToken(){\n  const token = localStorage.getItem('id_token');\n  this.authToken = token; \n}\n\n loggedIn(): boolean{\n  return localStorage.getItem('access_token') !==  null;\n}\n\nlogout() {\n  this.authToken = null;\n  this.admin = null;\n  localStorage.clear();\n}\ngetAdmin() {\n\n  let headers = new Headers();\n  this.loadToken();\n  headers.append('Authorization', this.authToken);\n  headers.append('Content-Type', 'application/json');\n  return this.http.get('users/profile', {headers: headers})\n  .pipe(map((response: any) => response.json()));\n}\nputAdmin(admin: Admin) {\n  return this.http.put(this.baseURL + `/${admin._id}`, admin);\n\n}\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { Drink } from './menumodel';\nimport { Ditore } from './menumodel';\nimport { Meat } from './menumodel';\nimport { Fish } from './menumodel';\nimport { Dessert } from './menumodel';\nimport { Pasta } from './menumodel';\n\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class EditMenuService {\n  selectedDitore: Ditore;\n  selectedPasta: Pasta;\n  selectedMeat: Meat;\n  selectedFish: Fish;\n  selectedDessert: Dessert;\n  selectedDrink: Drink;\n\n\n  options;\n  readonly baseURL = 'ditore';\n  readonly baseURL1 = 'pasta';\n  readonly baseURL2 = 'fish';\n  readonly baseURL3 = 'meat';\n  readonly baseURL4= 'drink';\n  readonly baseURL5= 'dessert';\n\n\n  constructor( private http: Http) { }\n\n\n  // DItore \n\n  postDitore(dite: Ditore) {\n    return this.http.post(this.baseURL, dite);  }\n\n    getDitore() {\n      return this.http.get(this.baseURL, this.options)\n      .pipe(map((response: any) => response.json()));\n    }\n\n  putDitore(dite: Ditore) {\n    return this.http.put(this.baseURL + `/${dite._id}`, dite);\n\n  }\n  deleteDitore(_id: string) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n  // end ditore\n\n\n\n  // Post, get, put and delete Pasta \n\n  postPasta(pasta: Pasta) {\n    return this.http.post(this.baseURL1, pasta);  }\n\n    getPasta() {\n      return this.http.get(this.baseURL1, this.options)\n      .pipe(map((response: any) => response.json()));\n    }\n\n  putPasta(pasta: Pasta) {\n    return this.http.put(this.baseURL1 + `/${pasta._id}`, pasta);\n\n  }\n  deletePasta(_id: string) {\n    return this.http.delete(this.baseURL1 + `/${_id}`);\n  }\n  // end Pasta\n\n\n\n    // Post, get, put and delete Fish \n\n    postFish(fish: Fish) {\n      return this.http.post(this.baseURL2, fish);  }\n  \n      getFish() {\n        return this.http.get(this.baseURL2, this.options)\n        .pipe(map((response: any) => response.json()));\n      }\n  \n    putFish(fish: Fish) {\n      return this.http.put(this.baseURL2 + `/${fish._id}`, fish);\n  \n    }\n    deleteFish(_id: string) {\n      return this.http.delete(this.baseURL2 + `/${_id}`);\n    }\n    // end Fish\n\n\n       // Post, get, put and delete Meat \n\n       postMeat(meat: Meat) {\n        return this.http.post(this.baseURL3, meat);  }\n    \n        getMeat() {\n          return this.http.get(this.baseURL3, this.options)\n          .pipe(map((response: any) => response.json()));\n        }\n    \n      putMeat(meat: Meat) {\n        return this.http.put(this.baseURL3 + `/${meat._id}`, meat);\n    \n      }\n      deleteMeat(_id: string) {\n        return this.http.delete(this.baseURL3 + `/${_id}`);\n      }\n      // end Meat\n\n       // Post, get, put and delete drink \n\n       postDrink(drink: Drink) {\n        return this.http.post(this.baseURL4, drink);  }\n    \n        getDrink() {\n          return this.http.get(this.baseURL4, this.options)\n          .pipe(map((response: any) => response.json()));\n        }\n    \n      putDrink(drink: Drink) {\n        return this.http.put(this.baseURL4 + `/${drink._id}`, drink);\n    \n      }\n      deleteDrink(_id: string) {\n        return this.http.delete(this.baseURL4 + `/${_id}`);\n      }\n      // end Drink\n\n\n        // Post, get, put and delete Dessert \n\n        postDessert(dessert: Dessert) {\n          return this.http.post(this.baseURL5, dessert);  }\n      \n          getDessert() {\n            return this.http.get(this.baseURL5, this.options)\n            .pipe(map((response: any) => response.json()));\n          }\n      \n        putDessert(dessert: Dessert) {\n          return this.http.put(this.baseURL5 + `/${dessert._id}`, dessert);\n      \n        }\n        deleteDessert(_id: string) {\n          return this.http.delete(this.baseURL5 + `/${_id}`);\n        }\n        // end Drink\n      \n\n}\n\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { Reservation } from 'src/app/services/reservationmodel';\nimport { Review } from 'src/app/services/reviewmodel';\n\nimport * as _ from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n  options;\n  selectedReservation: Reservation;\n  selectedReview: Review;\n\n\n  readonly baseURL= 'reservation';\n  readonly baseURL1= 'review';\n\n\n\n  constructor( private http: Http) { }\n\n\n\n  postReservation(reservation: Reservation) {\n    return this.http.post(this.baseURL, reservation)\n    .pipe(map((response: any) => response.json()));\n  }\n\n    getReservation() {\n      return this.http.get(this.baseURL, this.options)\n      .pipe(map((response: any) => response.json()));\n    }\n\n  putReservation(reservation: Reservation) {\n    return this.http.put(this.baseURL + `/${reservation._id}`, reservation);\n\n  }\n  deleteReservation(_id: string) {\n    return this.http.delete(this.baseURL + `/${_id}`);\n  }\n\n\n\n  postReview(review: Review) {\n    return this.http.post(this.baseURL1, review)\n    .pipe(map((response: any) => response.json()));\n  }\n\n    getReview() {\n      return this.http.get(this.baseURL1, this.options)\n      .pipe(map((response: any) => response.json()));\n    }\n\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n\n  validateDitore(Ditore){\n    if(Ditore.food == undefined || Ditore.description == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n\n  validatePasta(Pasta){\n    if(Pasta.pasta == undefined || Pasta.descriptionp == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateMeat(Meat){\n    if(Meat.meat == undefined || Meat.descriptionm == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateFish(Fish){\n    if(Fish.fish == undefined || Fish.descriptionf == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateDessert(Dessert){\n    if(Dessert.dessert == undefined || Dessert.descriptiond == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateDrink(Drink){\n    if(Drink.drink == undefined || Drink.descriptiondr == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateReservation(Reservation){\n    if(Reservation.name == undefined || Reservation.specification == undefined || Reservation.number == undefined || Reservation.date == undefined || Reservation.persons == undefined || Reservation.date == undefined || Reservation.time == undefined){\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}